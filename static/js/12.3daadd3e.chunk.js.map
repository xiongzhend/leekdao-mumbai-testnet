{"version":3,"sources":["views/Billboard/Map/BillboardForm.tsx","views/Billboard/Map/BillboardDetails.tsx","views/Billboard/Hero.tsx","hooks/useAllowance.ts","views/Billboard/Map/Pins.tsx","views/Billboard/Map/PostOrBid.tsx","views/Billboard/api/index.ts","views/Billboard/Map/MapBox.tsx","views/Billboard/Billboard.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/formatBalance.ts","utils/chainExplorer.ts","components/UnlockButton.tsx","config/constants/ifo.ts","config/constants/airdrop.ts","config/constants/index.ts","utils/callHelpers.ts","utils/erc20.ts","utils/truncateWalletAddress.ts","views/Billboard/store/store.tsx","hooks/useTokenBalance.ts","config/index.ts","views/Billboard/store/reducer.tsx","config/constants/location.ts","hooks/useApprove.ts","components/Transaction/Column.tsx","components/Transaction/LoadingContent.tsx","views/Billboard/Modal/ConfirmationPendeingContent.tsx","components/Transaction/TransactionMessage.tsx","views/Billboard/Modal/BillboardBidModal.tsx"],"names":["ipfs","ipfsClient","host","port","protocol","FormLayout","styled","div","Textarea","textarea","backgroundColor","textColor","BillboardForm","info","setPopupInfo","baseInfo","tokenBalance","allowance","setShowForm","id","city","isBid","bidLevel","isDark","useTheme","account","useWallet","useState","description","setDescription","twitter","setTwitter","buffer","setBuffer","file","setFile","validImage","setValidImage","validDescription","setValidDescription","validTwitter","setValidTwitter","approval","setApproval","tokenAddress","getCakeAddress","minimumTokenAmount","basePrice","bidTokenAmount","getBalanceNumber","BigNumber","tokenContract","useERC20","billboardContract","useBillboardContract","billboardAddress","getBillboardAddress","formatedMinimumTokenAmount","onApprove","useBillboardApprove","needsApproval","toNumber","formatedTokenBalance","isQualified","isTokenEnough","useModal","title","onDismiss","onPresentConfirmationModal","onPresentImageUploadingModal","onPresentBillboardBidModal","handleApprove","useCallback","a","console","error","handleIsValid","e","field","fieldValue","validator","isLength","min","max","maxAllowedSize","Number","validateAllFields","onSubmit","event","preventDefault","add","response","hash","methods","bid","send","from","result","action","type","GET_BILLBOARD_HASH","billboardHash","store","dispatch","color","size","style","marginBottom","mb","placeholder","name","value","onChange","currentTarget","onBlur","required","accept","image","target","files","urlReader","window","FileReader","bufferReader","readAsDataURL","readAsArrayBuffer","onload","arg","onloadend","arrayBuffer","Uint8Array","Buffer","padding","src","alt","width","marginTop","alignItems","justifyContent","onClick","disabled","React","memo","BillboardLayout","BaseLayout","theme","mediaQueries","sm","BillboardDetails","props","mintPrice","ipfsHash","desc","owner","formatedBasePrice","billboardCollectionContract","useBillboardCollectionContract","onPresentTraitUploadingModal","generateNFT","string","uniqueIdentifier","md5","slice","trait","attributes","trait_type","JSON","stringify","tokenURI","mint","transactionHash","message","maxWidth","bold","marginRight","href","getChainExplorerUrl","process","truncateWalletAddress","mt","StyledHero","Box","Title","Heading","attrs","as","colors","primary","DesktopImage","Image","lg","Hero","Container","pr","height","useBillboardAllowance","spenderAddress","setAllowance","fastRefresh","useRefresh","useEffect","call","res","fetch","StyledSvg","svg","StyledImg","img","zoom","Pins","data","map","longitude","latitude","viewBox","d","PostOrBid","showForm","comp","tipSize","anchor","closeOnClick","onClose","useGetBaseInfo","setBaseInfo","contract","slowRefresh","mounted","Promise","all","minimumTokenAmountToCreate","fetchData","useGetMintPrice","setMintPrice","useGetBillboardDetails","cities","billboardStore","getState","getAllBillBoards","billboards","newBillboards","forEach","billboard","init","billboardsDetails","billboardData","push","GET_BILLBOARD_DETAILS","geolocateStyle","top","left","fullscreenControlStyle","navStyle","scaleControlStyle","bottom","MapLoadingLayout","Map","bearing","pitch","viewport","setViewport","isMounted","popupInfo","useTokenBalance","mapbox","document","getElementsByClassName","closeButton","popupContent","setAttribute","mapStyle","onViewportChange","mapboxApiAccessToken","Billboard","flexDirection","fontSize","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","useContext","TranslationsContext","length","urlProvider","NODE_URL","getNodeUrl","startsWith","Web3","providers","HttpProvider","timeout","WebsocketProvider","useWeb3","ethereum","refEth","useRef","web3","setweb3","current","useContract","abi","address","contractOptions","eth","Contract","setContract","useIfoContract","ifo","useAirdropContract","airdrop","getAirdropAddress","billboardCollection","getBillboardCollectionAddress","useVestingContract","vesting","erc20","useCake","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","balance","decimals","displayBalance","dividedBy","pow","getFullDisplayBalance","toFixed","getMainTokenBalance","multipliedBy","chainId","ETHERSCAN_PREFIXES","getTranscationHash","getBlockInfo","block","getOpenSeaUrl","OPENSEA_URL","UnlockButton","TranslateString","connect","reset","useWalletModal","onPresentConnectModal","onPresentWrongNetworkModal","variant","ifos","80001","137","idoAddress","isActive","mainToken","subTitle","startTime","endTime","salesAmount","projectSiteUrl","tokenDecimals","totalAmount","farmsConfig","filter","farm","isCommunity","tokenSymbol","approve","lpContract","masterChefContract","options","ethers","constants","MaxUint256","stake","pid","amount","deposit","times","toString","on","tx","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","getContract","provider","getAllowance","getTokenBalance","userAddress","balanceOf","startLength","endLength","substring","createStore","reducer","billboardReducer","useTotalSupply","totalSupply","setTotalSupply","cakeContract","cakeABI","supply","fetchTotalSupply","useLockBalance","setBalance","vestingContract","vestingABI","getVestingAddress","remainingTokens","bal","fetchBalance","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","defaultState","billboardState","state","newState","parse","useApprove","useDispatch","fetchFarmUserDataAsync","Column","ColumnCenter","AutoColumn","gap","justify","rotate","keyframes","Spinner","ConfirmedIcon","CustomLightSpinner","LoadingContent","ConfirmationPendingContent","TransactionMessage","ThemeContext","strokeWidth","BillboardBidModal"],"mappings":"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","file":"static/js/12.3daadd3e.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport ipfsClient from 'ipfs-http-client'\nimport styled from 'styled-components';\nimport { City } from \"config/constants/types\"\nimport useTheme from 'hooks/useTheme'\nimport { getBalanceNumber } from \"utils/formatBalance\"\nimport { Text, Button, Input, Heading, Flex, useModal } from \"leek-uikit\"\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton';\nimport { useBillboardApprove } from 'hooks/useApprove';\nimport { getCakeAddress, getBillboardAddress } from 'utils/addressHelpers';\nimport { useERC20, useBillboardContract } from 'hooks/useContract';\nimport BigNumber from 'bignumber.js';\nimport validator from \"validator\"\nimport ConfirmationPendingContent from '../Modal/ConfirmationPendeingContent';\nimport BillboardBidModal from '../Modal/BillboardBidModal';\nimport { GET_BILLBOARD_HASH } from '../store/reducer';\nimport { store } from \"../store/store\"\nimport { BillboardBaseInfo } from \"../api\"\n\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\ninterface Info extends City {\n    desc?: string\n    isBid?: boolean,\n    owner?: string,\n    ipfsHash?: string,\n    bidLevel?: number\n\n}\n\nexport interface FormProps {\n    info: Info\n    setPopupInfo: (params) => void\n    setShowForm?: (params) => void\n    baseInfo: BillboardBaseInfo\n    tokenBalance: BigNumber\n    allowance: BigNumber\n    mintPrice?: BigNumber\n}\n\nconst FormLayout = styled.div`\n    padding:30px;\n\n    @media (max-width: 768px) {\n        padding:20px\n    }\n`\n\nconst Textarea = styled.textarea<{ backgroundColor: string, textColor: string }>`\n    background-color:${({ backgroundColor }) => backgroundColor};\n    border: 0;\n    border-radius: 16px;\n    box-shadow: inset 0px 2px 2px -1px rgb(74 74 104 / 10%);\n    color: ${({ textColor }) => textColor};\n    display: block;\n    font-size: 16px;\n    height: 100px;\n    outline: 0;\n    width: 100%;\n    padding:15px;\n`\n\nconst BillboardForm: React.FC<FormProps> = ({ info, setPopupInfo, baseInfo, tokenBalance, allowance, setShowForm }) => {\n    const { id, city, isBid, bidLevel } = info;\n    const { isDark } = useTheme()\n    const { account } = useWallet()\n    const [description, setDescription] = useState(\"\")\n    const [twitter, setTwitter] = useState(\"\")\n    const [buffer, setBuffer] = useState(null);\n    const [file, setFile] = useState(null);\n    const [validImage, setValidImage] = useState(true)\n    const [validDescription, setValidDescription] = useState(true)\n    const [validTwitter, setValidTwitter] = useState(true);\n    const [approval, setApproval] = useState(true)\n    const tokenAddress = getCakeAddress()\n    const minimumTokenAmount = baseInfo && baseInfo.minimumTokenAmount\n    const basePrice = baseInfo && baseInfo.basePrice\n    const formatedBasePrice = getBalanceNumber(new BigNumber(basePrice));\n    const bidTokenAmount = formatedBasePrice * bidLevel\n    const tokenContract = useERC20(tokenAddress);\n    const billboardContract = useBillboardContract()\n    const billboardAddress = getBillboardAddress()\n    const formatedMinimumTokenAmount = getBalanceNumber(new BigNumber(minimumTokenAmount))\n    const { onApprove } = useBillboardApprove(tokenContract, billboardAddress)\n    const needsApproval = allowance.toNumber() <= 0\n    const formatedTokenBalance = getBalanceNumber(tokenBalance)\n    const isQualified = isBid || formatedTokenBalance >= formatedMinimumTokenAmount\n    const isTokenEnough = !isBid || formatedTokenBalance >= bidTokenAmount\n    const [onPresentConfirmationModal] = useModal(<ConfirmationPendingContent title=\"Waiting for Confirmation\" onDismiss={() => { return null }} />)\n    const [onPresentImageUploadingModal] = useModal(<ConfirmationPendingContent title=\"Image Uploading to IPFS\" onDismiss={() => { return null }} />)\n    const [onPresentBillboardBidModal] = useModal(<BillboardBidModal onDismiss={() => { return null }} />)\n\n    const handleApprove = useCallback(async () => {\n        try {\n            setApproval(true)\n            const txHash = await onApprove()\n            if (!txHash) {\n                setApproval(false)\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onApprove, setApproval])\n\n    const validateAllFields = (field: string, fieldValue: string) => {\n        if (field === 'description') {\n            setDescription(fieldValue)\n            if (validator.isLength(fieldValue, { min: 1, max: 50 })) {\n                setValidDescription(true)\n            } else {\n                setValidDescription(false)\n            }\n        }\n\n        if (field === 'twitter') {\n            setTwitter(fieldValue)\n            if (validator.isLength(fieldValue, { min: 1, max: 50 })) {\n                setValidTwitter(true)\n            } else {\n                setValidTwitter(false)\n            }\n        }\n\n        if (field === 'image') {\n            const maxAllowedSize = 5 * 1024 * 1024;\n            if (Number(fieldValue) > maxAllowedSize) {\n                setValidImage(false)\n            } else {\n                setValidImage(true)\n            }\n        }\n    }\n\n    const handleIsValid = (e, field: string) => {\n        validateAllFields(field, e);\n    }\n\n    const captureFile = (event) => {\n        event.preventDefault()\n        const image = event.target.files[0]\n        if (image) {\n            handleIsValid(image.size, 'image')\n        }\n        const urlReader = new window.FileReader()\n        const bufferReader = new window.FileReader()\n        urlReader.readAsDataURL(image)\n        bufferReader.readAsArrayBuffer(image)\n\n        urlReader.onload = (arg) => {\n            setFile(arg.target.result)\n        }\n\n        bufferReader.onloadend = () => {\n            const arrayBuffer = new Uint8Array(bufferReader.result as ArrayBuffer)\n            setBuffer(Buffer.from(arrayBuffer));\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault()\n        onPresentImageUploadingModal()\n        const response = await ipfs.add(buffer);\n        if (response) {\n            const { hash } = response[0];\n            onPresentConfirmationModal();\n            const result = await billboardContract.methods.bid(id, city, hash, description, twitter).send({ from: account })\n            if (result) {\n                const action = {\n                    type: GET_BILLBOARD_HASH,\n                    billboardHash: result.billboardHash,\n                }\n                store.dispatch(action)\n                onPresentBillboardBidModal()\n            }\n            setPopupInfo(null);\n            setShowForm(false);\n\n        }\n    }\n\n    return (\n        <FormLayout>\n            <Heading color=\"secondary\" size=\"lg\">Bill Board Bid Form</Heading>\n            <Text>City: {info.city}</Text>\n            <form onSubmit={onSubmit}>\n                <div style={{ marginBottom: '10px' }}>\n                    <Text mb=\"5px\">Twitter Username: (without @)</Text>\n                    <Input\n                        placeholder=\"Twitter Username...\"\n                        name=\"twitter\"\n                        value={twitter}\n                        onChange={(e) => handleIsValid(e.currentTarget.value, \"twitter\")}\n                        onBlur={() => setValidTwitter(true)}\n                    />\n                </div>\n\n                <div style={{ marginBottom: '10px' }}>\n                    <Text mb=\"5px\">* Descriptions:</Text>\n                    <Textarea\n                        placeholder=\"Descriptions...\"\n                        name=\"description\"\n                        value={description}\n                        onChange={(e) => handleIsValid(e.currentTarget.value, \"description\")}\n                        required\n                        backgroundColor={!isDark ? \"#eeeaf4\" : \"#483f5a\"}\n                        textColor={!isDark ? \"#452A7A\" : \"#EAE2FC\"}\n                    />\n                </div>\n\n                <div>\n                    <Text mb=\"5px\">* Upload Images:</Text>\n                    <Input\n                        type=\"file\"\n                        name=\"img\"\n                        accept=\"image/*\"\n                        onChange={captureFile}\n                        required\n                        style={{ padding: \"8px\" }}\n                    />\n\n                    {file && <img src={file} alt=\"board\" width=\"200px\" style={{ marginTop: \"10px\" }} />}<br />\n                </div>\n\n                {account && !isQualified && <Text color=\"failure\" mb=\"10px\">Sorry! First Time Creation Required: {formatedMinimumTokenAmount} LEEK</Text>}\n\n                {account && !isTokenEnough && <Text color=\"failure\" mb=\"10px\">Sorry! Minimum LEEK Required: {bidTokenAmount} LEEK</Text>}\n\n                {account && !validDescription && <Text color=\"failure\" mb=\"10px\">Sorry! Text Size is 1 - 50</Text>}\n\n                {account && !validImage && <Text color=\"failure\" mb=\"10px\">Sorry! Maximum Image Size is: 5MB</Text>}\n\n                {account && !validTwitter && <Text color=\"failure\" mb=\"10px\">Sorry! Please enter a valid twitter name</Text>}\n\n                {account ? <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Button onClick={handleApprove} disabled={!isQualified || !needsApproval || !approval || !validImage || !validDescription || !isTokenEnough}>Approve</Button>\n                    <Button type=\"submit\" disabled={!isQualified || needsApproval || !validImage || !validDescription || !isTokenEnough}>Submit</Button>\n                </Flex> : <UnlockButton />}\n\n\n            </form>\n        </FormLayout>\n\n    )\n}\n\nexport default React.memo(BillboardForm);","import React from \"react\"\nimport md5 from \"md5\"\nimport ipfsClient from 'ipfs-http-client'\nimport styled from \"styled-components\"\nimport BigNumber from \"bignumber.js\"\nimport { getBalanceNumber } from \"utils/formatBalance\"\nimport { Text, Button, Heading, Flex, Box, BaseLayout, LinkExternal, Link, useModal } from \"leek-uikit\"\nimport { useBillboardCollectionContract } from \"hooks/useContract\"\nimport truncateWalletAddress from \"utils/truncateWalletAddress\"\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from \"components/UnlockButton\"\nimport { getChainExplorerUrl } from \"utils/chainExplorer\"\nimport ConfirmationPendingContent from \"../Modal/ConfirmationPendeingContent\"\nimport BillboardBidModal from \"../Modal/BillboardBidModal\"\nimport { GET_BILLBOARD_HASH } from '../store/reducer';\nimport { store } from \"../store/store\"\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\nexport interface Trait {\n    attributes: Attribute[];\n    image: string;\n    description: string;\n    name: string;\n    id?: string;\n}\n\ninterface Attribute {\n    trait_type: string;\n    value: string;\n}\n\nconst BillboardLayout = styled(BaseLayout)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding:30px;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 0.8fr 1fr;\n  }\n`\n\nconst BillboardDetails = (props) => {\n    const { info, baseInfo, setShowForm, mintPrice } = props;\n    const { id, ipfsHash, desc, bidLevel, owner, twitter, city } = info;\n    const basePrice = baseInfo && baseInfo.basePrice\n    const formatedBasePrice = getBalanceNumber(new BigNumber(basePrice));\n    const { account } = useWallet()\n    const isQualified = account === owner\n    const billboardCollectionContract = useBillboardCollectionContract()\n\n    const bid = () => {\n        setShowForm(true)\n    }\n\n    const [onPresentTraitUploadingModal] = useModal(<ConfirmationPendingContent title=\"Traits Uploading to IPFS\" onDismiss={() => { return null }} />)\n    const [onPresentBillboardBidModal] = useModal(<BillboardBidModal onDismiss={() => { return null }} />)\n    const [onPresentConfirmationModal] = useModal(<ConfirmationPendingContent title=\"Waiting for Confirmation\" onDismiss={() => { return null }} />)\n\n    const generateNFT = async () => {\n        onPresentTraitUploadingModal()\n        const string = ipfsHash + city + owner + bidLevel\n        const uniqueIdentifier = md5(string).slice(0, 7)\n\n        const trait: Trait = {\n            attributes: [\n                {\n                    trait_type: \"Level\",\n                    value: bidLevel\n                },\n                {\n                    trait_type: \"City\",\n                    value: city\n                },\n                {\n                    trait_type: \"Purchased Price\",\n                    value: `${formatedBasePrice * bidLevel / 2} LEEK`\n                }\n            ],\n            image: `https://ipfs.infura.io/ipfs/${ipfsHash}`,\n            description: desc,\n            name: `WorldMapBillBoards NFT #${uniqueIdentifier}`\n        }\n\n        try {\n            const response = await ipfs.add(Buffer.from(JSON.stringify(trait)));\n\n            if (response) {\n                const { hash } = response[0];\n                const tokenURI = `https://ipfs.infura.io/ipfs/${hash}`\n                onPresentConfirmationModal()\n                const result = await billboardCollectionContract.methods.mint(id, tokenURI).send({ from: account, value: mintPrice })\n                if (result) {\n                    const action = {\n                        type: GET_BILLBOARD_HASH,\n                        billboardHash: result.transactionHash,\n                    }\n                    store.dispatch(action)\n                    onPresentBillboardBidModal()\n                }\n            }\n        } catch (err) {\n            console.error(\"Unable to mint collections\", err.message)\n        }\n    }\n\n    return (\n        <BillboardLayout>\n            <img src={`https://ipfs.infura.io/ipfs/${ipfsHash}`} alt=\"city\" width={300} />\n            <Box>\n                <div style={{ marginBottom: \"10px\", maxWidth: \"300px\" }}>\n                    <Heading size=\"lg\" color=\"secondary\">{desc}</Heading>\n                </div>\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">City: </Text>\n                    <Text>{city}</Text>\n                </Flex>\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Owner:</Text>\n                    <LinkExternal href={getChainExplorerUrl(chainId, owner)}>{truncateWalletAddress(owner)}</LinkExternal>\n                </Flex>\n\n                {\n                    twitter && <Flex alignItems=\"center\" justifyContent=\"start\">\n                        <Text bold marginRight=\"10px\">Twitter:</Text>\n                        <Link href={`https://twitter.com/${twitter}`} target=\"_blank\">@{twitter}</Link>\n                    </Flex>\n                }\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Bid Level:</Text>\n                    <Text>{bidLevel}</Text>\n                </Flex>\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Bid Price:</Text>\n                    <Text>{formatedBasePrice * bidLevel} LEEK</Text>\n                </Flex>\n\n                {\n                    account ?\n                        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                            <Button size=\"sm\" mt=\"10px\" onClick={bid}>Bid Here</Button>\n                            <Button size=\"sm\" mt=\"10px\" disabled={!isQualified} onClick={generateNFT}>Generate NFT</Button>\n                        </Flex>\n                        :\n                        <UnlockButton size=\"sm\" mt=\"10px\" />\n                }\n\n                {\n                    account && !isQualified && <Text color=\"failure\" mt=\"10px\">Sorry! Only owner can generate NFT</Text>\n                }\n\n            </Box>\n        </BillboardLayout >\n    )\n}\n\nexport default React.memo(BillboardDetails)","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'leek-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\nconst StyledHero = styled(Box)`\n background-image: linear-gradient(180deg, #c0cefa 20%, #c0fae3 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero = () => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            World Map Billboard\n                        </Title>\n                        <Heading mb=\"16px\">\n                            Advertise your products using LEEK Token\n                        </Heading>\n                    </Box>\n                    <DesktopImage src=\"./images/games/billboard/billboard.png\" width={200} height={200} />\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n\n\n// Retrieve Billboard Allowance\nexport const useBillboardAllowance = (tokenContract: Contract, spenderAddress: string) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, fastRefresh])\n\n  return allowance\n}\n","import React from 'react';\nimport { Marker } from 'react-map-gl';\nimport styled from 'styled-components';\n\nconst ICON = `M12,2 C8.14,2 5,5.14 5,9 C5,13.17 9.42,18.92 11.24,21.11 C11.64,21.59 12.37,21.59 12.77,21.11 C14.58,18.92 19,13.17 19,9 C19,5.14 15.86,2 12,2 Z M15,10 L13,10 L13,12 C13,12.55 12.55,13 12,13 C11.45,13 11,12.55 11,12 L11,10 L9,10 C8.45,10 8,9.55 8,9 C8,8.45 8.45,8 9,8 L11,8 L11,6 C11,5.45 11.45,5 12,5 C12.55,5 13,5.45 13,6 L13,8 L15,8 C15.55,8 16,8.45 16,9 C16,9.55 15.55,10 15,10 Z`;\n\nconst SIZE = 35;\n\nconst StyledSvg = styled.svg`\n    cursor: pointer;\n    fill: #AB3395;\n    stroke: none;\n    transform: translate(-20px, -32px);\n`\n\nconst StyledImg = styled.img<{ zoom: number }>`\n    min-width:64px;\n    min-height:48px;\n    max-width:${({ zoom }) => zoom * 85}px;\n    max-height:${({ zoom }) => zoom * 64}px;\n    width: ${({ zoom }) => zoom * 10}%;\n    height: ${({ zoom }) => zoom * 10}%;\n    borderRadius:50%;\n    transform: translate(-20px, -32px);\n    cursor: pointer;\n`\n\nfunction Pins(props) {\n    const { data, onClick, zoom } = props;\n\n    return (\n        <div>\n            {\n                data && data.map((city) => (\n                    <Marker key={city.id} longitude={city.longitude} latitude={city.latitude} >\n                        {\n                            city.ipfsHash ?\n                                <StyledImg zoom={zoom} src={`https://ipfs.infura.io/ipfs/${city.ipfsHash}`} alt={city.id} onClick={() => onClick(city)} /> :\n                                <StyledSvg\n                                    height={SIZE}\n                                    viewBox=\"0 0 24 24\"\n                                    onClick={() => onClick(city)}\n                                >\n                                    <path d={ICON} />\n                                </StyledSvg>\n                        }\n                    </Marker >\n                ))\n            }\n        </div >\n    )\n}\n\nexport default React.memo(Pins);","import React, { useState } from \"react\"\nimport { Popup } from \"react-map-gl\"\nimport BillboardForm, { FormProps } from \"./BillboardForm\"\nimport BillboardDetails from \"./BillboardDetails\"\n\nconst PostOrBid: React.FC<FormProps> = ({ info, setPopupInfo, baseInfo, tokenBalance, allowance, mintPrice }) => {\n    const [showForm, setShowForm] = useState(false)\n\n    let comp = <BillboardForm info={info} setPopupInfo={setPopupInfo} baseInfo={baseInfo} tokenBalance={tokenBalance} allowance={allowance} setShowForm={setShowForm} />;\n\n    if (info && info.ipfsHash) {\n        if (showForm) {\n            comp = <BillboardForm info={info} setPopupInfo={setPopupInfo} baseInfo={baseInfo} tokenBalance={tokenBalance} allowance={allowance} setShowForm={setShowForm} />\n        } else {\n            comp = <BillboardDetails info={info} baseInfo={baseInfo} setShowForm={setShowForm} mintPrice={mintPrice} />\n        }\n    }\n\n    return (\n        <div>\n            {\n                info && (<Popup\n                    tipSize={10}\n                    anchor=\"bottom\"\n                    longitude={info.longitude}\n                    latitude={info.latitude}\n                    closeOnClick={false}\n                    onClose={() => {\n                        setPopupInfo(null)\n                        setShowForm(false)\n                    }\n                    }\n                >\n                    {comp}\n                </Popup>\n                )\n            }\n        </div>\n\n    )\n}\n\nexport default React.memo(PostOrBid)","import { useEffect, useState } from \"react\"\nimport BigNumber from \"bignumber.js\";\nimport { useBillboardContract, useBillboardCollectionContract } from \"hooks/useContract\"\nimport useRefresh from \"hooks/useRefresh\"\nimport { billboardStore } from '../store/store';\nimport { GET_BILLBOARD_DETAILS } from '../store/reducer'\n\n\nexport interface BillboardBaseInfo {\n    basePrice: number\n    minimumTokenAmount: number\n}\n\nexport const useGetBaseInfo = () => {\n    const [baseInfo, setBaseInfo] = useState<BillboardBaseInfo>()\n    const contract = useBillboardContract()\n    const { slowRefresh } = useRefresh()\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchData = async () => {\n            try {\n                const [basePrice, minimumTokenAmount] = await Promise.all([\n                    contract.methods.basePrice().call(),\n                    contract.methods.minimumTokenAmountToCreate().call(),\n                ])\n\n                if (mounted) {\n                    setBaseInfo({\n                        basePrice,\n                        minimumTokenAmount\n                    })\n                }\n            } catch (err) {\n                console.error(\"Unable to fetch base price\", err.response)\n            }\n        }\n        fetchData();\n        return () => { mounted = false }\n    }, [slowRefresh])// eslint-disable-line react-hooks/exhaustive-deps\n    return baseInfo\n}\n\nexport const useGetMintPrice = () => {\n    const [mintPrice, setMintPrice] = useState<BigNumber>()\n    const contract = useBillboardCollectionContract()\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchData = async () => {\n            try {\n                const response = await contract.methods.mintPrice().call()\n\n                if (mounted) {\n                    setMintPrice(response)\n                }\n            } catch (err) {\n                console.error(\"Unable to fetch mint price\", err.response)\n            }\n        }\n        fetchData();\n        return () => { mounted = false }\n    }, [])// eslint-disable-line react-hooks/exhaustive-deps\n    return mintPrice\n}\n\nexport const useGetBillboardDetails = () => {\n    const contract = useBillboardContract()\n    const { cities } = billboardStore.getState()\n    const { fastRefresh } = useRefresh()\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchData = async () => {\n            try {\n                const billboards = await contract.methods.getAllBillBoards().call();\n                const newBillboards = {}\n\n                billboards.forEach(billboard => {\n                    const { id, desc, owner, ipfsHash, bidLevel, twitter } = billboard;\n                    const isBid = billboard.init;\n\n                    newBillboards[id] = {\n                        id,\n                        desc,\n                        twitter,\n                        isBid,\n                        owner,\n                        ipfsHash,\n                        bidLevel\n                    }\n                })\n\n                const billboardsDetails = []\n\n                cities.forEach(city => {\n                    const { id } = city\n                    const billboardData = newBillboards[id];\n\n                    if (billboardData) {\n                        billboardsDetails.push({\n                            ...city,\n                            ...billboardData\n                        })\n                    } else {\n                        billboardsDetails.push(city)\n                    }\n                })\n\n                if (mounted) {\n                    const action = {\n                        type: GET_BILLBOARD_DETAILS,\n                        cities: billboardsDetails\n                    }\n\n                    billboardStore.dispatch(action)\n                }\n\n            } catch (err) {\n                console.error(\"Unable to fetch billboard details\", err.response)\n            }\n        }\n        fetchData();\n        return () => {\n            mounted = false\n        }\n    }, [fastRefresh])// eslint-disable-line react-hooks/exhaustive-deps\n}","import React, { useState, useEffect } from 'react';\nimport MapGL, {\n    NavigationControl,\n    FullscreenControl,\n    ScaleControl,\n    GeolocateControl\n} from 'react-map-gl';\nimport useTheme from 'hooks/useTheme'\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { Spinner } from 'leek-uikit';\nimport { getCakeAddress, getBillboardAddress } from 'utils/addressHelpers';\nimport { useERC20 } from 'hooks/useContract';\nimport { useBillboardAllowance } from 'hooks/useAllowance';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport Pins from './Pins';\nimport PostOrBid from './PostOrBid'\nimport { useGetBillboardDetails, useGetBaseInfo, useGetMintPrice } from \"../api/index\"\nimport { billboardStore } from \"../store/store\"\n\nconst TOKEN = process.env.REACT_APP_MAP_TOKEN\n\nconst geolocateStyle = {\n    top: 0,\n    left: 0,\n    padding: '10px',\n};\n\nconst fullscreenControlStyle = {\n    top: 36,\n    left: 0,\n    padding: '10px',\n};\n\nconst navStyle = {\n    top: 72,\n    left: 0,\n    padding: '10px'\n};\n\nconst scaleControlStyle = {\n    bottom: 36,\n    left: 0,\n    padding: '10px'\n};\n\nconst MapLoadingLayout = styled.div<{ isDark: boolean }>`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    background-color:${({ isDark }) => isDark ? `rgba(255, 255, 255, 0.5)` : `rgba(0, 0, 0, 0.5)`};\n    z-index:2;\n`\n\nconst Map = () => {\n    const [viewport, setViewport] = useState({\n        latitude: 51.29,\n        longitude: 0,\n        zoom: 1.5,\n        bearing: 0,\n        pitch: 0\n    });\n    const { isDark } = useTheme()\n    useGetBillboardDetails();\n    const { cities, isMounted } = billboardStore.getState();\n    const mintPrice = useGetMintPrice()\n    const baseInfo = useGetBaseInfo()\n    const tokenAddress = getCakeAddress()\n    const tokenContract = useERC20(tokenAddress);\n    const billboardAddress = getBillboardAddress()\n    const allowance = new BigNumber(useBillboardAllowance(tokenContract, billboardAddress) || 0)\n    const [popupInfo, setPopupInfo] = useState(null);\n    const tokenBalance = useTokenBalance(tokenAddress)\n\n    useEffect(() => {\n        const mapbox = document.getElementsByClassName('mapboxgl-map')[0]\n        const closeButton = document.getElementsByClassName('mapboxgl-popup-close-button')[0]\n        const popupContent = document.getElementsByClassName(\"mapboxgl-popup-content\")[0]\n\n        if (mapbox) {\n            if (popupInfo) {\n                mapbox.setAttribute(\"style\", \"position: absolute; width: 100%; height: 100%; overflow: hidden; visibility: inherit; opacity:50%\")\n\n                if (isDark) {\n                    popupContent.setAttribute('style', \"background:#18151f\")\n                    closeButton.setAttribute('style', \"font-size:50px; width:50px;color:#c9c4d4\")\n                } else {\n                    popupContent.setAttribute('style', \"background:#fff\")\n                    closeButton.setAttribute('style', \"font-size:50px; width:50px;color:#483f5a\")\n                }\n            } else {\n                mapbox.setAttribute('style', 'position: absolute; width: 100%; height: 100%; overflow: hidden; visibility: inherit;')\n            }\n        }\n    }, [popupInfo, isDark, isMounted])\n\n    return (\n        <>\n            <MapGL\n                {...viewport}\n                width=\"100%\"\n                height=\"100vh\"\n                mapStyle={!isDark ? \"mapbox://styles/mapbox/streets-v10\" : 'mapbox://styles/mapbox/dark-v10'}\n                onViewportChange={setViewport}\n                mapboxApiAccessToken={TOKEN}\n            >\n\n                {isMounted ? <Pins data={cities} onClick={setPopupInfo} zoom={viewport.zoom} /> : <MapLoadingLayout isDark={isDark}>\n                    <Spinner />\n                </MapLoadingLayout>}\n\n                <PostOrBid info={popupInfo} setPopupInfo={setPopupInfo} baseInfo={baseInfo} tokenBalance={tokenBalance} allowance={allowance} mintPrice={mintPrice} />\n\n                <GeolocateControl style={geolocateStyle} />\n                <FullscreenControl style={fullscreenControlStyle} />\n                <NavigationControl style={navStyle} />\n                <ScaleControl style={scaleControlStyle} />\n            </MapGL>\n        </>\n    );\n}\n\nexport default React.memo(Map)","import React from \"react\";\nimport { Flex, Heading } from \"leek-uikit\";\nimport Hero from \"./Hero\";\nimport Map from \"./Map/MapBox\";\n\nconst Billboard = () => {\n    return (\n        <div>\n            <Hero />\n            <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                <Heading size=\"xl\" color=\"secondary\" mt=\"40px\" mb=\"40px\" fontSize=\"50px\">\n                    Participate our Billboard Right now!\n                </Heading>\n            </Flex>\n            <Map />\n        </div>\n    )\n}\n\nexport default Billboard\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getNodeUrl from 'utils/getRpcUrl'\n\nconst NODE_URL = getNodeUrl()\n\nlet urlProvider: any\nif (NODE_URL.startsWith('https://')) {\n  urlProvider = new Web3.providers.HttpProvider(NODE_URL, { timeout: 10000 } as HttpProviderOptions)\n} else if (NODE_URL.startsWith('wss://')) {\n  urlProvider = new Web3.providers.WebsocketProvider(NODE_URL)\n}\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || urlProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || urlProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getAirdropAddress, getBillboardAddress, getBillboardCollectionAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport vesting from 'config/abi/vesting.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport airdrop from 'config/abi/airdrop.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport billboard from \"config/abi/billboard.json\"\nimport billboardCollection from \"config/abi/billboardCollection.json\"\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useAirdropContract = () => {\n  const abi = (airdrop as unknown) as AbiItem\n  return useContract(abi, getAirdropAddress())\n}\n\nexport const useBillboardContract = () => {\n  const abi = (billboard as unknown) as AbiItem\n  return useContract(abi, getBillboardAddress())\n}\n\nexport const useBillboardCollectionContract = () => {\n  const abi = (billboardCollection as unknown) as AbiItem\n  return useContract(abi, getBillboardCollectionAddress())\n}\n\nexport const useVestingContract = (address: string) => {\n  const vestingAbi = (vesting as unknown) as AbiItem\n  return useContract(vestingAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const getMainTokenBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.multipliedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { ETHERSCAN_PREFIXES, OPENSEA_URL } from 'config'\nimport { getBillboardCollectionAddress } from './addressHelpers'\n\nexport const getChainExplorerUrl = (chainId: string, address: string) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/address/${address}`\n}\n\nexport const getTranscationHash = (chainId: string, hash: string) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/tx/${hash}`\n}\n\nexport const getBlockInfo = (chainId: string, block: number) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/block/${block}`\n}\n\nexport const getOpenSeaUrl = (chainId: string, id: string) => {\n    return `${OPENSEA_URL[chainId]}/${getBillboardCollectionAddress()}/${id}`\n}","import React from 'react'\nimport { Button, useWalletModal } from 'leek-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset, error } = useWallet()\n  const { onPresentConnectModal, onPresentWrongNetworkModal } = useWalletModal(connect, reset, error)\n  let comp\n  if (error) {\n    comp = (\n      <Button onClick={onPresentWrongNetworkModal} {...props} variant=\"danger\">\n        Wrong Network\n      </Button>\n    )\n  } else {\n    comp = (\n      <Button onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    )\n  }\n\n  return <div>{comp}</div>\n}\n\nexport default UnlockButton\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'leek',\n    tokenAddress: {\n      80001: '0xc657EFDb41eaBA15Cea84d34a2A60b18686FA929',\n      137: '0x67A32987a8EAA0644702C362B53B8EeBd126C20b',\n    },\n    idoAddress: {\n      80001: '0x8AaE8746bCFaAC6AC2927C1C9099943B4de5d7f3',\n      137: '0x0E9B41A5D64de6B4BF6e086417E813Df21707748',\n    },\n    isActive: false,\n    name: 'LEEK',\n    mainToken: 'MATIC',\n    subTitle: 'A community driven crypto and knowledge sharing DAO powered by $LEEK Social Token',\n    startTime: 1625625327,\n    endTime: 1626625327,\n    salesAmount: 500000,\n    projectSiteUrl: '#',\n    tokenDecimals: 18,\n  },\n]\n\nexport default ifos\n","import { Airdrop } from './types'\n\nconst airdrop: Airdrop =\n{\n    id: 'leek',\n    tokenAddress: {\n        80001: '0xc657EFDb41eaBA15Cea84d34a2A60b18686FA929',\n        137: '0x67A32987a8EAA0644702C362B53B8EeBd126C20b',\n    },\n    isActive: true,\n    name: 'LEEK',\n    description: 'A community driven crypto and knowledge sharing DAO powered by $LEEK Social Token',\n    tokenDecimals: 18,\n    projectSiteUrl: \"https://leekdao.xyz\",\n    totalAmount: 10000\n}\n\nexport default airdrop","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\nexport { default as airdropConfig } from \"./airdrop\"\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n    return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress","import { createStore } from 'redux'\nimport { reducer, billboardReducer } from './reducer'\n\nexport const store = createStore(reducer)\nexport const billboardStore = createStore(billboardReducer)\n\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport vestingABI from \"config/abi/vesting.json\"\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress, getVestingAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\n\nexport const useLockBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const vestingContract = getContract(vestingABI, getVestingAddress())\n      const bal = await vestingContract.methods.remainingTokens().call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [fastRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(15768000)\nexport const BSC_BLOCK_TIME = 2\n\nexport const CAKE_POOL_PID = 1\nexport const ETHERSCAN_PREFIXES = {\n  137: 'https://polygonscan.com',\n  80001: 'https://mumbai.polygonscan.com'\n}\n\nexport const OPENSEA_URL = {\n  137: 'https://opensea.io/assets/matic/',\n  80001: 'https://testnets.opensea.io/assets/mumbai/'\n}\n\n","import cities from \"config/constants/location\"\n\nconst defaultState = {\n    billboardHash: '',\n}\n\nconst billboardState = {\n    cities,\n    isMounted: false\n}\n\nexport const GET_BILLBOARD_HASH = 'GET_BID_BILLBOARD_HASH'\nexport const GET_BILLBOARD_DETAILS = 'GET_BILLBOARD_DETAILS'\n\nexport const reducer = (state = defaultState, action) => {\n    if (action.type === GET_BILLBOARD_HASH) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.billboardHash = action.billboardHash\n        return newState\n    }\n    return state\n}\n\nexport const billboardReducer = (state = billboardState, action) => {\n    if (action.type === GET_BILLBOARD_DETAILS) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.cities = action.cities\n        newState.isMounted = true;\n        return newState\n    }\n    return state\n}","import { City } from \"./types\"\n\nconst cities: City[] = [\n    {\n        \"id\": 0,\n        \"city\": \"Tokyo\",\n        \"latitude\": 35.685,\n        \"longitude\": 139.7514\n    },\n    {\n        \"id\": 1,\n        \"city\": \"Osaka\",\n        \"latitude\": 34.75,\n        \"longitude\": 135.4601\n    },\n    {\n        \"id\": 2,\n        \"city\": \"Arsenyev\",\n        \"latitude\": 44.1623,\n        \"longitude\": 133.2823\n    },\n    {\n        \"id\": 3,\n        \"city\": \"Berlin\",\n        \"latitude\": 52.5218,\n        \"longitude\": 13.4015\n    },\n    {\n        \"id\": 4,\n        \"city\": \"Nairobi\",\n        \"latitude\": -1.2833,\n        \"longitude\": 36.8167\n    },\n    {\n        \"id\": 5,\n        \"city\": \"Seoul\",\n        \"latitude\": 37.5663,\n        \"longitude\": 126.9997\n    },\n    {\n        \"id\": 6,\n        \"city\": \"Buenos Aires\",\n        \"latitude\": -34.6025,\n        \"longitude\": -58.3975\n    },\n    {\n        \"id\": 7,\n        \"city\": \"Moscow\",\n        \"latitude\": 55.7522,\n        \"longitude\": 37.6155\n    },\n    {\n        \"id\": 8,\n        \"city\": \"St. Petersburg\",\n        \"latitude\": 59.939,\n        \"longitude\": 30.316\n    },\n    {\n        \"id\": 9,\n        \"city\": \"Shanghai\",\n        \"latitude\": 31.2165,\n        \"longitude\": 121.4365\n    },\n    {\n        \"id\": 10,\n        \"city\": \"Beijing\",\n        \"latitude\": 39.9289,\n        \"longitude\": 116.3883\n    },\n    {\n        \"id\": 11,\n        \"city\": \"Chengdu\",\n        \"latitude\": 30.67,\n        \"longitude\": 104.07\n    },\n    {\n        \"id\": 12,\n        \"city\": \"Shenzhen\",\n        \"latitude\": 22.5524,\n        \"longitude\": 114.1221\n    },\n    {\n        \"id\": 13,\n        \"city\": \"Wuhan\",\n        \"latitude\": 30.58,\n        \"longitude\": 114.27\n    },\n    {\n        \"id\": 14,\n        \"city\": \"Kabul\",\n        \"latitude\": 34.5167,\n        \"longitude\": 69.1833\n    },\n    {\n        \"id\": 15,\n        \"city\": \"Paris\",\n        \"latitude\": 48.8667,\n        \"longitude\": 2.3333\n    },\n    {\n        \"id\": 16,\n        \"city\": \"Mexico City\",\n        \"latitude\": 19.4424,\n        \"longitude\": -99.131\n    },\n    {\n        \"id\": 17,\n        \"city\": \"Istanbul\",\n        \"latitude\": 41.105,\n        \"longitude\": 29.01\n    },\n    {\n        \"id\": 18,\n        \"city\": \"Cairo\",\n        \"latitude\": 30.05,\n        \"longitude\": 31.25\n    },\n    {\n        \"id\": 19,\n        \"city\": \"Singapore\",\n        \"latitude\": 1.293,\n        \"longitude\": 103.8558\n    },\n    {\n        \"id\": 20,\n        \"city\": \"Cape Town\",\n        \"latitude\": -33.92,\n        \"longitude\": 18.435\n    },\n    {\n        \"id\": 21,\n        \"city\": \"Greenland\",\n        \"latitude\": 75,\n        \"longitude\": -45\n    },\n    {\n        \"id\": 22,\n        \"city\": \"S\\\\x8bo Paulo\",\n        \"latitude\": -23.5587,\n        \"longitude\": -46.625\n    },\n    {\n        \"id\": 23,\n        \"city\": \"Kazakhstan\",\n        \"latitude\": 43.5165,\n        \"longitude\": 68.5199\n    },\n    {\n        \"id\": 24,\n        \"city\": \"Curitiba\",\n        \"latitude\": -25.42,\n        \"longitude\": -49.32\n    },\n    {\n        \"id\": 25,\n        \"city\": \"Bangkok\",\n        \"latitude\": 13.75,\n        \"longitude\": 100.5166\n    },\n    {\n        \"id\": 26,\n        \"city\": \"Athens\",\n        \"latitude\": 37.9833,\n        \"longitude\": 23.7333\n    },\n    {\n        \"id\": 27,\n        \"city\": \"Manila\",\n        \"latitude\": 14.6042,\n        \"longitude\": 120.9822\n    },\n    {\n        \"id\": 28,\n        \"city\": \"Kano\",\n        \"latitude\": 12.0,\n        \"longitude\": 8.52\n    },\n    {\n        \"id\": 29,\n        \"city\": \"Riyadh\",\n        \"latitude\": 24.6408,\n        \"longitude\": 46.7727\n    },\n    {\n        \"id\": 30,\n        \"city\": \"Jeddah\",\n        \"latitude\": 21.5169,\n        \"longitude\": 39.2192\n    },\n    {\n        \"id\": 31,\n        \"city\": \"Sydney\",\n        \"latitude\": -33.92,\n        \"longitude\": 151.1852\n    },\n    {\n        \"id\": 32,\n        \"city\": \"Melbourne\",\n        \"latitude\": -37.82,\n        \"longitude\": 144.975\n    },\n    {\n        \"id\": 33,\n        \"city\": \"Addis Ababa\",\n        \"latitude\": 9.0333,\n        \"longitude\": 38.7\n    },\n    {\n        \"id\": 34,\n        \"city\": \"Jakarta\",\n        \"latitude\": -6.1744,\n        \"longitude\": 106.8294\n    },\n    {\n        \"id\": 35,\n        \"city\": \"London\",\n        \"latitude\": 51.5,\n        \"longitude\": -0.1167\n    },\n    {\n        \"id\": 36,\n        \"city\": \"Santiago\",\n        \"latitude\": -33.45,\n        \"longitude\": -70.667\n    },\n    {\n        \"id\": 37,\n        \"city\": \"Ho Chi Minh City\",\n        \"latitude\": 10.78,\n        \"longitude\": 106.695\n    },\n    {\n        \"id\": 38,\n        \"city\": \"Tel Aviv-Yafo\",\n        \"latitude\": 32.08,\n        \"longitude\": 34.77\n    },\n    {\n        \"id\": 39,\n        \"city\": \"Mumbai\",\n        \"latitude\": 19.017,\n        \"longitude\": 72.857\n    },\n    {\n        \"id\": 40,\n        \"city\": \"Delhi\",\n        \"latitude\": 28.67,\n        \"longitude\": 77.23\n    },\n    {\n        \"id\": 41,\n        \"city\": \"Kolkata\",\n        \"latitude\": 22.495,\n        \"longitude\": 88.3247\n    },\n    {\n        \"id\": 42,\n        \"city\": \"Bangalore\",\n        \"latitude\": 12.97,\n        \"longitude\": 77.56\n    },\n    {\n        \"id\": 43,\n        \"city\": \"Kanpur\",\n        \"latitude\": 26.46,\n        \"longitude\": 80.32\n    },\n    {\n        \"id\": 44,\n        \"city\": \"Toronto\",\n        \"latitude\": 43.7,\n        \"longitude\": -79.42\n    },\n    {\n        \"id\": 45,\n        \"city\": \"Casablanca\",\n        \"latitude\": 33.6,\n        \"longitude\": -7.6164\n    },\n    {\n        \"id\": 46,\n        \"city\": \"Madrid\",\n        \"latitude\": 40.4,\n        \"longitude\": -3.6834\n    },\n    {\n        \"id\": 47,\n        \"city\": \"Barcelona\",\n        \"latitude\": 41.3833,\n        \"longitude\": 2.1834\n    },\n    {\n        \"id\": 48,\n        \"city\": \"Chittagong\",\n        \"latitude\": 22.33,\n        \"longitude\": 91.8\n    },\n    {\n        \"id\": 49,\n        \"city\": \"Rome\",\n        \"latitude\": 41.896,\n        \"longitude\": 12.4833\n    },\n    {\n        \"id\": 50,\n        \"city\": \"New York\",\n        \"latitude\": 40.6943,\n        \"longitude\": -73.9249\n    },\n    {\n        \"id\": 51,\n        \"city\": \"Los Angeles\",\n        \"latitude\": 34.1139,\n        \"longitude\": -118.4068\n    },\n    {\n        \"id\": 52,\n        \"city\": \"Chicago\",\n        \"latitude\": 41.8373,\n        \"longitude\": -87.6861\n    },\n    {\n        \"id\": 53,\n        \"city\": \"Miami\",\n        \"latitude\": 25.784,\n        \"longitude\": -80.2102\n    },\n    {\n        \"id\": 54,\n        \"city\": \"Houston\",\n        \"latitude\": 29.7868,\n        \"longitude\": -95.3905\n    },\n    {\n        \"id\": 55,\n        \"city\": \"Moscow\",\n        \"latitude\": 55.7522,\n        \"longitude\": 37.615\n    },\n    {\n        \"id\": 56,\n        \"city\": \"St.Petersburg\",\n        \"latitude\": 59.939,\n        \"longitude\": 30.316\n    },\n    {\n        \"id\": 57,\n        \"city\": \"Tulun\",\n        \"latitude\": 54.5653,\n        \"longitude\": 100.5654\n    },\n    {\n        \"id\": 58,\n        \"city\": \"Auckland\",\n        \"latitude\": -36.8481,\n        \"longitude\": 174.763\n    },\n    {\n        \"id\": 59,\n        \"city\": \"São Paulo\",\n        \"latitude\": -23.5587,\n        \"longitude\": -46.625\n    },\n    {\n        \"id\": 60,\n        \"city\": \"Toronto\",\n        \"latitude\": 43.7,\n        \"longitude\": -79.42\n    },\n    {\n        \"id\": 61,\n        \"city\": \"Ottawa\",\n        \"latitude\": 45.4167,\n        \"longitude\": -75.7\n    },\n    {\n        \"id\": 62,\n        \"city\": \"Vancouver\",\n        \"latitude\": 49.2734,\n        \"longitude\": -123.1216\n    },\n    {\n        \"id\": 63,\n        \"city\": \"Reykjav√≠k\",\n        \"latitude\": 64.15,\n        \"longitude\": -21.95\n    },\n    {\n        \"id\": 64,\n        \"city\": \"Cali\",\n        \"latitude\": 3.4,\n        \"longitude\": -76.5\n    },\n    {\n        \"id\": 65,\n        \"city\": \"Perth\",\n        \"latitude\": -31.955,\n        \"longitude\": 115.84\n    },\n    {\n        \"id\": 66,\n        \"city\": \"Harare\",\n        \"latitude\": -17.8178,\n        \"longitude\": 31.0447\n    },\n    {\n        \"id\": 67,\n        \"city\": \"Jakarta\",\n        \"latitude\": -6.1744,\n        \"longitude\": 106.8294\n    },\n    {\n        \"id\": 68,\n        \"city\": \"Oslo\",\n        \"latitude\": 59.9167,\n        \"longitude\": 10.75\n    },\n    {\n        \"id\": 69,\n        \"city\": \"Mashhad\",\n        \"latitude\": 36.27,\n        \"longitude\": 59.57\n    },\n    {\n        \"id\": 70,\n        \"city\": \"Port Louis\",\n        \"latitude\": -20.1666,\n        \"longitude\": 57.5\n    },\n    {\n        \"id\": 71,\n        \"city\": \"Apia\",\n        \"latitude\": -13.8415,\n        \"longitude\": -171.7386\n    },\n    {\n        \"id\": 72,\n        \"city\": \"Kaohsiung\",\n        \"latitude\": 22.6333,\n        \"longitude\": 120.2666\n    },\n    {\n        \"id\": 73,\n        \"city\": \"Ulaanbaatar\",\n        \"latitude\": 47.9167,\n        \"longitude\": 106.9166\n    },\n    {\n        \"id\": 74,\n        \"city\": \"Suva\",\n        \"latitude\": -18.133,\n        \"longitude\": 178.4417\n    },\n    {\n        \"id\": 75,\n        \"city\": \"Uninhabited islands\",\n        \"latitude\": -40,\n        \"longitude\": 80\n    },\n    {\n        \"id\": 76,\n        \"city\": \"Paek islands\",\n        \"latitude\": -40,\n        \"longitude\": 100\n    },\n\n    {\n        \"id\": 77,\n        \"city\": \"Ice sea\",\n        \"latitude\": -33,\n        \"longitude\": -20\n    },\n    {\n        \"id\": 78,\n        \"city\": \"Turtle sea\",\n        \"latitude\": 20,\n        \"longitude\": 160\n    },\n    {\n        \"id\": 79,\n        \"city\": \"Middel sea\",\n        \"latitude\": -17,\n        \"longitude\": 80\n    },\n    {\n        \"id\": 80,\n        \"city\": \"Edmonton\",\n        \"latitude\": 53.55,\n        \"longitude\": -113.5\n    },\n    {\n        \"id\": 81,\n        \"city\": \"Krasnoyarsk\",\n        \"latitude\": 56.014,\n        \"longitude\": 92.866\n    },\n    {\n        \"id\": 82,\n        \"city\": \"Noginsk\",\n        \"latitude\": 64.4833,\n        \"longitude\": 91.2333\n    },\n    {\n        \"id\": 83,\n        \"city\": \"South Pole\",\n        \"latitude\": -80,\n        \"longitude\": 2\n    }\n]\n\nexport default cities","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n\nexport const useBillboardApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return { onApprove }\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n    gap?: 'sm' | 'md' | 'lg' | string\n    justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { ColumnCenter } from \"./Column\"\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nconst CustomLightSpinner = styled(Spinner) <{ size: string }>`\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n`\n\nconst LoadingContent = () => {\n    return (\n        <ConfirmedIcon>\n            <CustomLightSpinner src=\"./images/blue-loader.svg\" alt=\"loader\" size=\"90px\" />\n        </ConfirmedIcon>\n    )\n}\n\nexport default LoadingContent","import React from 'react'\nimport { Modal } from 'leek-uikit'\nimport LoadingContent from 'components/Transaction/LoadingContent'\n\ntype ConfirmationPendingContentProps = {\n    title: string\n    onDismiss: () => void\n}\n\nconst ConfirmationPendingContent = ({ title, onDismiss }: ConfirmationPendingContentProps) => {\n    return (\n        <Modal title={title} onDismiss={onDismiss}>\n            <LoadingContent />\n        </Modal>\n    )\n}\n\nexport default ConfirmationPendingContent","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { LinkExternal } from 'leek-uikit'\nimport { ArrowUpCircle } from 'react-feather'\nimport { getTranscationHash } from 'utils/chainExplorer'\nimport { AutoColumn, ColumnCenter } from './Column'\n\ntype TransactionMessageProps = {\n    transactionHash?: string\n}\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nconst TransactionMessage: React.FC<TransactionMessageProps> = ({ transactionHash }) => {\n    const theme = useContext(ThemeContext)\n\n    return (\n        <div>\n            <ConfirmedIcon>\n                <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\n            </ConfirmedIcon>\n            <AutoColumn gap=\"8px\" justify=\"center\">\n                <LinkExternal href={getTranscationHash(chainId, transactionHash)}>View on PolygonScan</LinkExternal>\n            </AutoColumn>\n        </div>\n\n    )\n}\n\nexport default TransactionMessage","import React from 'react'\nimport { Button, Modal } from 'leek-uikit'\nimport { AutoColumn } from 'components/Transaction/Column'\nimport TransactionMessage from 'components/Transaction/TransactionMessage'\nimport { store } from \"../store/store\"\n\ntype TransactionSubmittedContentProps = {\n    onDismiss: () => void\n}\n\nconst BillboardBidModal = ({ onDismiss }: TransactionSubmittedContentProps) => {\n    const { billboardHash } = store.getState()\n\n    return (\n        <Modal title=\"Transaction Submitted\" onDismiss={onDismiss}>\n            <TransactionMessage transactionHash={billboardHash} />\n            <AutoColumn gap=\"8px\" justify=\"center\">\n                <Button onClick={onDismiss} mt=\"20px\">\n                    Close\n                </Button>\n            </AutoColumn>\n        </Modal>\n    )\n}\n\nexport default BillboardBidModal"],"sourceRoot":""}
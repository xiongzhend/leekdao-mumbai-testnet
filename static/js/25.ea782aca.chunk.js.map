{"version":3,"sources":["views/BillBoardCollections/Hero.tsx","views/BillBoardCollections/AttributeCard.tsx","views/BillBoardCollections/CollectionCard.tsx","views/BillBoardCollections/api/index.ts","views/BillBoardCollections/HowToGenerate.tsx","views/BillBoardCollections/Collections.tsx"],"names":["StyledHero","styled","Box","Title","Heading","attrs","as","size","theme","colors","primary","DesktopImage","Image","mediaQueries","lg","Hero","Container","alignItems","justifyContent","pr","mb","src","width","height","Properties","div","AttributeCard","attribute","trait_type","value","color","CollectionImage","img","PropertiesLayout","hidden","xl","DetailsButton","Button","variant","CollectionCard","collection","id","attributes","image","name","description","useState","showDetails","setShowDetails","p","alt","style","margin","textAlign","onClick","endIcon","bold","fontSize","map","href","getOpenSeaUrl","process","target","marginRight","useGetAllCollections","account","collections","setCollections","contract","useBillboardCollectionContract","useEffect","mounted","a","traits","methods","tokensOfOwner","call","Promise","all","tokenURI","hash","axios","get","data","push","console","error","response","fetchData","Divider","borderColor","StepContainer","Flex","md","StyledStepCard","radii","card","InlineLink","Link","StepCardInner","background","secondary","StepCard","step","textTransform","label","title","subtitle","HowToGenerate","marginBottom","mt","flexDirection","maxWidth","mr","marginLeft","CollectionsLayout","Wrapper","Collections","useWallet","comp","length","to","UnlockButton"],"mappings":"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","file":"static/js/25.ea782aca.chunk.js","sourcesContent":["import React from 'react'\nimport { Box, Flex, Heading, Image } from 'leek-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\nconst StyledHero = styled(Box)`\n background-image: linear-gradient(180deg, #c0cefa 20%, #c0fae3 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero = () => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            Billboard Collections\n                        </Title>\n                        <Heading mb=\"16px\">\n                            List all your generated Billboard Collections\n                        </Heading>\n                    </Box>\n                    <DesktopImage src=\"./images/games/billboard/nft.png\" width={200} height={200} />\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Text, Flex } from \"leek-uikit\"\n\nconst Properties = styled.div`\n    background-color: rgba(21, 178, 229, 0.06);\n    border-radius: 6px;\n    border: 1px solid rgb(21, 178, 229);\n    padding: 10px;\n    text-align: center;\n`\n\nfunction AttributeCard({ attribute }) {\n    const { trait_type, value } = attribute\n    return (\n        <Properties>\n            <Flex alignItems=\"center\" justifyContent=\"center\">\n                <div>\n                    <Text color=\"secondary\"> {trait_type}</Text>\n                    <Text> {value}</Text>\n                </div>\n            </Flex>\n        </Properties>\n\n    )\n}\n\nexport default AttributeCard\n","import React, { useState } from \"react\"\nimport { Card, Text, Flex, Button, ChevronUpIcon, ChevronDownIcon, Heading, CardBody, CardFooter, Link } from \"leek-uikit\"\nimport styled from \"styled-components\"\nimport { getOpenSeaUrl } from \"utils/chainExplorer\"\nimport AttributeCard from \"./AttributeCard\"\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nconst CollectionImage = styled.img`\n    min-width:200px;\n    min-height:200px;\n    max-height:300px;\n    max-width:100%;\n`\n\nconst PropertiesLayout = styled.div < { hidden: boolean }> `\n  display: ${({ hidden }) => hidden ? \"none\" : \"grid\"};\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  padding-bottom: 24px;\n  padding-top: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst CollectionCard = ({ collection }) => {\n    const { id, attributes, image, name, description } = collection;\n    const [showDetails, setShowDetails] = useState(true)\n\n    const handleClick = () => {\n        setShowDetails(!showDetails)\n    }\n\n    return (\n        <Card p=\"20px\" >\n            <CardBody>\n                <Flex alignItems=\"center\" justifyContent=\"center\">\n                    <CollectionImage src={image} alt=\"collections\" />\n                </Flex>\n\n                <div style={{ margin: \"20px 0\", width: \"100%\", textAlign: \"center\" }}>\n                    <Heading size=\"lg\" color=\"secondary\">{name}</Heading>\n                </div>\n            </CardBody>\n            <CardFooter>\n                <Flex alignItems=\"center\" justifyContent=\"center\">\n                    <DetailsButton\n                        onClick={handleClick}\n                        variant=\"text\"\n                        endIcon={\n                            !showDetails ? (\n                                <ChevronUpIcon color=\"primary\" width=\"21px\" />\n                            ) : (\n                                <ChevronDownIcon color=\"primary\" width=\"21px\" />\n                            )\n                        }>\n                        {showDetails ? \"Details\" : \"Hide\"}\n                    </DetailsButton>\n                </Flex>\n                {\n                    !showDetails &&\n                    <div>\n                        <div style={{ margin: \"10px 0\", width: \"100%\" }}>\n                            <Text bold fontSize=\"20px\">{description}</Text>\n                        </div>\n                        <PropertiesLayout hidden={showDetails}>\n                            {\n                                attributes.map((attribute) => (\n                                    <AttributeCard key={attribute.value} attribute={attribute} />\n                                ))\n                            }\n                        </PropertiesLayout>\n\n                        <Link href={getOpenSeaUrl(chainId, id)} target=\"_blank\">\n                            <img src=\"https://testnets.opensea.io/static/images/logos/opensea.svg\" alt=\"opensea\" style={{ width: \"30px\", marginRight: \"10px\" }} />\n                            View on OpenSea\n                        </Link>\n                    </div>\n                }\n\n\n            </CardFooter>\n        </Card>\n    )\n}\n\nexport default CollectionCard\n","import { useEffect, useState } from \"react\"\nimport axios from \"axios\"\nimport { useBillboardCollectionContract } from \"hooks/useContract\"\n\nconst useGetAllCollections = (account: string) => {\n    const [collections, setCollections] = useState(null)\n    const contract = useBillboardCollectionContract()\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchData = async () => {\n            try {\n                if (account) {\n                    const traits = [];\n\n                    const tokensOfOwner = await contract.methods.tokensOfOwner(account).call()\n\n                    await Promise.all(tokensOfOwner.map(async id => {\n                        const hash = await contract.methods.tokenURI(id).call()\n                        const { data } = await axios.get(hash)\n                        traits.push({\n                            id,\n                            ...data\n                        })\n                    }))\n\n                    if (mounted) {\n                        setCollections(traits)\n                    }\n\n                }\n            } catch (err) {\n                console.error(\"Unable to fetch collections data\", err.response)\n            }\n        }\n        fetchData();\n        return () => { mounted = false }\n    }, [account])// eslint-disable-line react-hooks/exhaustive-deps\n    return collections\n}\n\nexport default useGetAllCollections\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Heading, Link } from 'leek-uikit'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nconst StepContainer = styled(Flex)`\n  gap: 24px;\n  width: 100%;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst StyledStepCard = styled(Box)`\n  display: flex;\n  align-self: baseline;\n  position: relative;\n  background: ${({ theme }) => theme.colors.borderColor};\n  padding: 1px 1px 3px 1px;\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst StepCardInner = styled(Box)`\n  width: 100%;\n  padding: 24px;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nconst Title = styled(Heading).attrs({ as: 'h2', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\ntype Step = { title: string; subtitle: string; label: string }\n\nconst StepCard: React.FC<{ step: Step }> = ({ step }) => {\n    return (\n        <StyledStepCard width=\"100%\">\n            <StepCardInner height={['200px', '180px', null, '200px']}>\n                <Text mb=\"16px\" fontSize=\"15px\" bold textTransform=\"uppercase\" style={{ textAlign: \"right\" }}>\n                    {step.label}\n                </Text>\n                <Heading mb=\"16px\" fontSize=\"20px\" color=\"secondary\">\n                    {step.title}\n                </Heading>\n                <Text color=\"textSubtle\">{step.subtitle}</Text>\n            </StepCardInner>\n        </StyledStepCard>\n    )\n}\n\nconst HowToGenerate: React.FC = () => {\n    const steps: Step[] = [\n        {\n            label: \"Step 1\",\n            title: \"Post Info on Billboard Map\",\n            subtitle: 'First time post requires minimum 1000 LEEK',\n        },\n        {\n            label: \"Step 2\",\n            title: \"Generate Collections\",\n            subtitle: 'Only the owner can generate the collections. Each time generation requires 1 MATIC.',\n        },\n        {\n            label: \"Step 3\",\n            title: \"View Collections\",\n            subtitle: \"All the collections you generated will be displayed in the billboard collections section.\",\n        },\n    ]\n    return (\n        <Box width=\"100%\" style={{ marginBottom: \"30px\" }}>\n            <Divider />\n            <Flex mt=\"30px\" mb=\"40px\" alignItems=\"center\" flexDirection=\"column\">\n                <Title mb=\"24px\" fontSize=\"30px\" color=\"secondary\">\n                    How to Generate Your Collections?\n                </Title>\n            </Flex>\n            <StepContainer>\n                {steps.map((step) => (\n                    <StepCard key={step.label} step={step} />\n                ))}\n            </StepContainer>\n            <Divider />\n            <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n                <Flex maxWidth=\"100px\" mr=\"8px\" mb=\"16px\">\n                    <img src=\"./images/lottery/question.png\" alt=\"question\" />\n                </Flex>\n                <Flex maxWidth=\"300px\" flexDirection=\"column\">\n                    <Heading mb=\"16px\">\n                        Still got questions?\n                    </Heading>\n                    <Text>\n                        Check our in-depth guide on\n                        <InlineLink href=\"https://docs.leekdao.xyz\" marginLeft=\"5px\" target=\"_blank\">\n                            how to generate the billboard collections!\n                        </InlineLink>\n                    </Text>\n                </Flex>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default HowToGenerate","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from 'react-router-dom'\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\"\nimport Container from \"components/layout/Container\"\nimport UnlockButton from \"components/UnlockButton\"\nimport { Flex, Heading, Button, Spinner } from \"leek-uikit\"\nimport Hero from \"./Hero\"\nimport CollectionCard from \"./CollectionCard\"\nimport useGetAllCollections from \"./api\"\nimport HowToGenerate from \"./HowToGenerate\"\n\nconst CollectionsLayout = styled.div`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  padding-left: 50px;\n  padding-right: 50px;\n  padding-top:50px;\n  padding-bottom:50px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n@media (max-width: 768px) {\n   padding:30px\n  }\n`\n\nconst Wrapper = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding:100px;\n`\n\nconst Collections = () => {\n    const { account } = useWallet()\n    const collections = useGetAllCollections(account)\n\n    let comp\n\n    if (account) {\n        if (collections) {\n            if (collections.length > 0) {\n                comp = <CollectionsLayout>\n                    {\n                        collections.map(collection => (\n                            <CollectionCard key={collection.id} collection={collection} />\n                        ))\n                    }\n                </CollectionsLayout>\n\n            } else {\n                comp = <Container >\n                    <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                        <Heading size=\"xl\" color=\"secondary\" mt=\"40px\" mb=\"40px\" fontSize=\"50px\">\n                            Generate Your Collections 😊\n                        </Heading>\n                    </Flex>\n                    <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"20px\">\n                        <Button as={Link} to=\"/billboard\">Map Billboard</Button>\n                    </Flex>\n                </Container >\n            }\n        } else {\n            comp = <Container>\n                <Wrapper>\n                    <Spinner />\n                </Wrapper>\n            </Container>\n        }\n    } else {\n        comp = <Container>\n            <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                <Heading size=\"xl\" color=\"secondary\" mt=\"40px\" mb=\"40px\" fontSize=\"50px\">\n                    Unlock Wallet to View Collections\n                </Heading>\n            </Flex>\n            <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"20px\">\n                <UnlockButton />\n            </Flex>\n        </Container>\n    }\n\n    return (\n        <div>\n            <Hero />\n            {comp}\n            <Container>\n                <HowToGenerate />\n            </Container>\n\n\n        </div>\n    )\n}\n\nexport default Collections\n"],"sourceRoot":""}
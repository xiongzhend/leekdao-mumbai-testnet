{"version":3,"sources":["views/Billboard/Map/BillboardForm.tsx","hooks/useAllowance.ts","components/Transaction/LoadingContent.tsx","views/Billboard/Modal/ConfirmationPendeingContent.tsx","components/Transaction/TransactionMessage.tsx","views/Billboard/Modal/BillboardBidModal.tsx","views/Billboard/Hero.tsx","views/Billboard/Map/Pins.tsx","views/Billboard/Map/BillboardDetails.tsx","views/Billboard/Map/MapBox.tsx","views/Billboard/Billboard.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/formatBalance.ts","utils/chainExplorer.ts","components/UnlockButton.tsx","config/constants/ifo.ts","config/constants/airdrop.ts","config/constants/index.ts","utils/callHelpers.ts","utils/erc20.ts","utils/truncateWalletAddress.ts","views/Billboard/store/store.tsx","hooks/useTokenBalance.ts","config/index.ts","config/constants/location.ts","views/Billboard/store/reducer.tsx","hooks/useApprove.ts","components/Transaction/Column.tsx","views/Billboard/api/index.ts"],"names":["ipfs","ipfsClient","host","port","protocol","FormLayout","styled","div","Textarea","textarea","BillboardForm","info","setPopupInfo","id","city","isBid","bidLevel","account","useWallet","useState","description","setDescription","buffer","setBuffer","file","setFile","validImage","setValidImage","validDescription","setValidDescription","approval","setApproval","tokenAddress","getCakeAddress","baseInfo","useGetBaseInfo","minimumTokenAmount","basePrice","bidTokenAmount","getBalanceNumber","BigNumber","formatedMinimumTokenAmount","tokenContract","useERC20","billboardContract","useBillboardContract","billboardAddress","getBillboardAddress","onApprove","useBillboardApprove","needsApproval","useBillboardAllowance","toNumber","tokenBalance","useTokenBalance","formatedTokenBalance","isQualified","isTokenEnough","useModal","onDismiss","onPresentConfirmationModal","onPresentBillboardBidModal","handleApprove","useCallback","a","console","error","handleIsValid","e","field","fieldValue","validator","isLength","min","max","Number","validateAllFields","onSubmit","event","preventDefault","add","response","hash","methods","bid","send","from","result","action","type","GET_BID_BILLBOARD_HASH","bidHash","transactionHash","store","dispatch","bidStore","HIDE_FORM","color","size","style","marginBottom","mb","placeholder","name","value","onChange","currentTarget","required","accept","image","target","files","urlReader","window","FileReader","bufferReader","readAsDataURL","readAsArrayBuffer","onload","arg","onloadend","arrayBuffer","Uint8Array","Buffer","padding","src","alt","width","marginTop","alignItems","justifyContent","onClick","disabled","React","memo","spenderAddress","allowance","setAllowance","slowRefresh","useRefresh","useEffect","call","res","fetch","rotate","keyframes","Spinner","img","ConfirmedIcon","ColumnCenter","CustomLightSpinner","LoadingContent","ConfirmationPendingContent","title","TransactionMessage","theme","useContext","ThemeContext","strokeWidth","colors","primary","gap","justify","href","getTranscationHash","process","BillboardBidModal","getState","mt","StyledHero","Box","Title","Heading","attrs","as","DesktopImage","Image","mediaQueries","lg","Hero","Container","pr","height","StyledSvg","svg","StyledImg","zoom","Pins","props","data","map","longitude","latitude","ipfsHash","viewBox","d","BillboardLayout","BaseLayout","sm","BillboardDetails","desc","owner","formatedBasePrice","bold","marginRight","getChainExplorerUrl","truncateWalletAddress","SHOW_FORM","UnlockButton","geolocateStyle","top","left","fullscreenControlStyle","navStyle","scaleControlStyle","bottom","Map","bearing","pitch","viewport","setViewport","cities","useGetBillboardDetails","show","popupInfo","mapbox","document","getElementsByClassName","closeButton","setAttribute","comp","mapStyle","onViewportChange","mapboxApiAccessToken","tipSize","anchor","closeOnClick","onClose","Billboard","flexDirection","fontSize","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","length","urlProvider","NODE_URL","getNodeUrl","startsWith","Web3","providers","HttpProvider","timeout","WebsocketProvider","useWeb3","ethereum","refEth","useRef","web3","setweb3","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useIfoContract","ifo","useAirdropContract","airdrop","getAirdropAddress","billboard","useVestingContract","vesting","erc20","useCake","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","balance","decimals","displayBalance","dividedBy","pow","getFullDisplayBalance","toFixed","getMainTokenBalance","multipliedBy","chainId","ETHERSCAN_PREFIXES","getBlockInfo","block","TranslateString","connect","reset","useWalletModal","onPresentConnectModal","onPresentWrongNetworkModal","variant","ifos","80001","137","idoAddress","isActive","mainToken","subTitle","startTime","endTime","salesAmount","projectSiteUrl","tokenDecimals","totalAmount","farmsConfig","filter","farm","isCommunity","tokenSymbol","approve","lpContract","masterChefContract","options","ethers","constants","MaxUint256","stake","pid","amount","deposit","times","toString","on","tx","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","getContract","provider","getAllowance","getTokenBalance","userAddress","balanceOf","startLength","endLength","substring","createStore","reducer","billboardStore","billboardReducer","bidReducer","useTotalSupply","totalSupply","setTotalSupply","cakeContract","cakeABI","supply","fetchTotalSupply","useLockBalance","setBalance","fastRefresh","vestingContract","vestingABI","getVestingAddress","remainingTokens","bal","fetchBalance","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","defaultState","billboardState","formState","GET_BILLBOARD_DETAILS","state","newState","JSON","parse","stringify","useApprove","useDispatch","fetchFarmUserDataAsync","Column","AutoColumn","setBaseInfo","mounted","Promise","all","minimumTokenAmountToCreate","fetchData","billboardDetails","setBillboardDetails","getAllBillBoards","billboards","newBillboards","forEach","init","billboardsDetails","billboardData","push"],"mappings":"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","file":"static/js/12.3101967e.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport ipfsClient from 'ipfs-http-client'\nimport styled from 'styled-components';\nimport { City } from \"config/constants/types\"\nimport { getBalanceNumber } from \"utils/formatBalance\"\nimport { Text, Button, Input, Heading, Flex, useModal } from \"leek-uikit\"\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton';\nimport { useBillboardApprove } from 'hooks/useApprove';\nimport { getCakeAddress, getBillboardAddress } from 'utils/addressHelpers';\nimport { useERC20, useBillboardContract } from 'hooks/useContract';\nimport { useBillboardAllowance } from 'hooks/useAllowance';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport BigNumber from 'bignumber.js';\nimport validator from \"validator\"\nimport ConfirmationPendingContent from '../Modal/ConfirmationPendeingContent';\nimport BillboardBidModal from '../Modal/BillboardBidModal';\nimport { GET_BID_BILLBOARD_HASH, HIDE_FORM } from '../store/reducer';\nimport { store, bidStore } from \"../store/store\"\nimport { useGetBaseInfo } from '../api';\n\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\ninterface Info extends City {\n    desc?: string\n    isBid?: boolean,\n    owner?: string,\n    ipfsHash?: string,\n    bidLevel?: number\n\n}\n\ninterface formPorps {\n    info: Info\n    setPopupInfo: (params) => void\n}\n\nconst FormLayout = styled.div`\n    padding:30px;\n\n    @media (max-width: 768px) {\n        padding:20px\n    }\n`\n\nconst Textarea = styled.textarea`\n    background-color: #eeeaf4;\n    border: 0;\n    border-radius: 16px;\n    box-shadow: inset 0px 2px 2px -1px rgb(74 74 104 / 10%);\n    color: #452A7A;\n    display: block;\n    font-size: 16px;\n    height: 100px;\n    outline: 0;\n    width: 100%;\n    padding:15px;\n`\n\nconst BillboardForm: React.FC<formPorps> = ({ info, setPopupInfo }) => {\n    const { id, city, isBid, bidLevel } = info;\n    const { account } = useWallet()\n    const [description, setDescription] = useState(\"\")\n    const [buffer, setBuffer] = useState(null);\n    const [file, setFile] = useState(null);\n    const [validImage, setValidImage] = useState(true)\n    const [validDescription, setValidDescription] = useState(true)\n    const [approval, setApproval] = useState(true)\n    const tokenAddress = getCakeAddress()\n    const baseInfo = useGetBaseInfo()\n    const minimumTokenAmount = baseInfo && baseInfo.minimumTokenAmount\n    const basePrice = baseInfo && baseInfo.basePrice\n    const formatedBasePrice = getBalanceNumber(new BigNumber(basePrice));\n    const bidTokenAmount = formatedBasePrice * bidLevel\n    const formatedMinimumTokenAmount = getBalanceNumber(new BigNumber(minimumTokenAmount))\n    const tokenContract = useERC20(tokenAddress);\n    const billboardContract = useBillboardContract()\n    const billboardAddress = getBillboardAddress()\n    const { onApprove } = useBillboardApprove(tokenContract, billboardAddress)\n    const allowance = new BigNumber(useBillboardAllowance(tokenContract, billboardAddress) || 0)\n    const needsApproval = allowance.toNumber() <= 0\n    const tokenBalance = useTokenBalance(tokenAddress)\n    const formatedTokenBalance = getBalanceNumber(tokenBalance)\n    const isQualified = isBid || formatedTokenBalance >= formatedMinimumTokenAmount\n    const isTokenEnough = formatedTokenBalance >= bidTokenAmount\n\n    const [onPresentConfirmationModal] = useModal(<ConfirmationPendingContent onDismiss={() => { return null }} />)\n    const [onPresentBillboardBidModal] = useModal(<BillboardBidModal onDismiss={() => { return null }} />)\n\n    const handleApprove = useCallback(async () => {\n        try {\n            setApproval(true)\n            const txHash = await onApprove()\n            if (!txHash) {\n                setApproval(false)\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onApprove, setApproval])\n\n    const validateAllFields = (field: string, fieldValue: string) => {\n        if (field === 'description') {\n            setDescription(fieldValue)\n            if (validator.isLength(fieldValue, { min: 1, max: 50 })) {\n                setValidDescription(true)\n            } else {\n                setValidDescription(false)\n            }\n        }\n\n        if (field === 'image') {\n            const maxAllowedSize = 5 * 1024 * 1024;\n            if (Number(fieldValue) > maxAllowedSize) {\n                setValidImage(false)\n            } else {\n                setValidImage(true)\n            }\n        }\n    }\n\n    const handleIsValid = (e, field: string) => {\n        validateAllFields(field, e);\n    }\n\n    const captureFile = (event) => {\n        event.preventDefault()\n        const image = event.target.files[0]\n        handleIsValid(image.size, 'image')\n        const urlReader = new window.FileReader()\n        const bufferReader = new window.FileReader()\n        urlReader.readAsDataURL(image)\n        bufferReader.readAsArrayBuffer(image)\n\n        urlReader.onload = (arg) => {\n            setFile(arg.target.result)\n        }\n\n        bufferReader.onloadend = () => {\n            const arrayBuffer = new Uint8Array(bufferReader.result as ArrayBuffer)\n            setBuffer(Buffer.from(arrayBuffer));\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault()\n        const response = await ipfs.add(buffer);\n        const { hash } = response[0];\n        onPresentConfirmationModal();\n        const result = await billboardContract.methods.bid(id, city, hash, description).send({ from: account })\n        if (result) {\n            const action = {\n                type: GET_BID_BILLBOARD_HASH,\n                bidHash: result.transactionHash,\n            }\n            store.dispatch(action)\n            onPresentBillboardBidModal()\n        }\n        setPopupInfo(null);\n        bidStore.dispatch({ type: HIDE_FORM })\n    }\n\n    return (\n        <FormLayout>\n            <Heading color=\"secondary\" size=\"lg\">Bill Board Bid Form</Heading>\n            <Text>City: {info.city}</Text>\n            <form onSubmit={onSubmit}>\n                <div style={{ marginBottom: '10px' }}>\n                    <Text mb=\"5px\">* Descriptions:</Text>\n                    <Textarea\n                        placeholder=\"Descriptions...\"\n                        name=\"description\"\n                        value={description}\n                        onChange={(e) => handleIsValid(e.currentTarget.value, \"description\")}\n                        required\n                    />\n                </div>\n\n                <div>\n                    <Text mb=\"5px\">* Upload Images:</Text>\n                    <Input\n                        type=\"file\"\n                        name=\"img\"\n                        accept=\"image/*\"\n                        onChange={captureFile}\n                        required\n                        style={{ padding: \"8px\" }}\n                    />\n\n                    {file && <img src={file} alt=\"board\" width=\"200px\" style={{ marginTop: \"10px\" }} />}<br />\n                </div>\n\n                {account && !isQualified && <Text color=\"failure\" mb=\"10px\">Sorry! First Time Creation Required: {formatedMinimumTokenAmount} LEEK</Text>}\n\n                {account && !isTokenEnough && <Text color=\"failure\" mb=\"10px\">Sorry! Minimum LEEK Required: {bidTokenAmount} LEEK</Text>}\n\n                {account && !validDescription && <Text color=\"failure\" mb=\"10px\">Sorry! Text Size is 1 - 50</Text>}\n\n                {account && !validImage && <Text color=\"failure\" mb=\"10px\">Sorry! Maximum Image Size is: 5MB</Text>}\n\n                {account ? <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Button onClick={handleApprove} disabled={!isQualified || !needsApproval || !approval || !validImage || !validDescription || !isTokenEnough}>Approve</Button>\n                    <Button type=\"submit\" disabled={!isQualified || needsApproval || !validImage || !validDescription || !isTokenEnough}>Submit</Button>\n                </Flex> : <UnlockButton />}\n\n\n            </form>\n        </FormLayout>\n\n    )\n}\n\nexport default React.memo(BillboardForm);","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n\n\n// Retrieve Billboard Allowance\nexport const useBillboardAllowance = (tokenContract: Contract, spenderAddress: string) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, slowRefresh])\n\n  return allowance\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { ColumnCenter } from \"./Column\"\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nconst CustomLightSpinner = styled(Spinner) <{ size: string }>`\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n`\n\nconst LoadingContent = () => {\n    return (\n        <ConfirmedIcon>\n            <CustomLightSpinner src=\"./images/blue-loader.svg\" alt=\"loader\" size=\"90px\" />\n        </ConfirmedIcon>\n    )\n}\n\nexport default LoadingContent","import React from 'react'\nimport { Modal } from 'leek-uikit'\nimport LoadingContent from 'components/Transaction/LoadingContent'\n\ntype ConfirmationPendingContentProps = { onDismiss: () => void }\n\nconst ConfirmationPendingContent = ({ onDismiss }: ConfirmationPendingContentProps) => {\n    return (\n        <Modal title=\"Waiting for confirmation\" onDismiss={onDismiss}>\n            <LoadingContent />\n        </Modal>\n    )\n}\n\nexport default ConfirmationPendingContent","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { LinkExternal } from 'leek-uikit'\nimport { ArrowUpCircle } from 'react-feather'\nimport { getTranscationHash } from 'utils/chainExplorer'\nimport { AutoColumn, ColumnCenter } from './Column'\n\ntype TransactionMessageProps = {\n    transactionHash?: string\n}\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nconst TransactionMessage: React.FC<TransactionMessageProps> = ({ transactionHash }) => {\n    const theme = useContext(ThemeContext)\n\n    return (\n        <div>\n            <ConfirmedIcon>\n                <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\n            </ConfirmedIcon>\n            <AutoColumn gap=\"8px\" justify=\"center\">\n                <LinkExternal href={getTranscationHash(chainId, transactionHash)}>View on PolygonScan</LinkExternal>\n            </AutoColumn>\n        </div>\n\n    )\n}\n\nexport default TransactionMessage","import React from 'react'\nimport { Button, Modal } from 'leek-uikit'\nimport { AutoColumn } from 'components/Transaction/Column'\nimport TransactionMessage from 'components/Transaction/TransactionMessage'\nimport { store } from \"../store/store\"\n\ntype TransactionSubmittedContentProps = {\n    onDismiss: () => void\n}\n\nconst BillboardBidModal = ({ onDismiss }: TransactionSubmittedContentProps) => {\n    const { bidHash } = store.getState()\n\n    return (\n        <Modal title=\"Transaction Submitted\" onDismiss={onDismiss}>\n            <TransactionMessage transactionHash={bidHash} />\n            <AutoColumn gap=\"8px\" justify=\"center\">\n                <Button onClick={onDismiss} mt=\"20px\">\n                    Close\n                </Button>\n            </AutoColumn>\n        </Modal>\n    )\n}\n\nexport default BillboardBidModal","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'leek-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\nconst StyledHero = styled(Box)`\n background-image: linear-gradient(180deg, #c0cefa 20%, #c0fae3 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero = () => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            World Map Billboard\n                        </Title>\n                        <Heading mb=\"16px\">\n                            Advertise your products using LEEK Token\n                        </Heading>\n                    </Box>\n                    <DesktopImage src=\"./images/games/billboard/billboard.png\" width={200} height={200} />\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React from 'react';\nimport { Marker } from 'react-map-gl';\nimport styled from 'styled-components';\n\nconst ICON = `M12,2 C8.14,2 5,5.14 5,9 C5,13.17 9.42,18.92 11.24,21.11 C11.64,21.59 12.37,21.59 12.77,21.11 C14.58,18.92 19,13.17 19,9 C19,5.14 15.86,2 12,2 Z M15,10 L13,10 L13,12 C13,12.55 12.55,13 12,13 C11.45,13 11,12.55 11,12 L11,10 L9,10 C8.45,10 8,9.55 8,9 C8,8.45 8.45,8 9,8 L11,8 L11,6 C11,5.45 11.45,5 12,5 C12.55,5 13,5.45 13,6 L13,8 L15,8 C15.55,8 16,8.45 16,9 C16,9.55 15.55,10 15,10 Z`;\n\nconst SIZE = 35;\n\nconst StyledSvg = styled.svg`\n    cursor: pointer;\n    fill: #AB3395;\n    stroke: none;\n    transform: translate(-20px, -32px);\n`\n\nconst StyledImg = styled.img<{ zoom: number }>`\n    width: ${({ zoom }) => zoom * 40}px;\n    height: ${({ zoom }) => zoom * 40}px;\n    borderRadius:50%;\n    transform: translate(-20px, -32px);\n`\n\nfunction Pins(props) {\n    const { data, onClick, zoom } = props;\n\n    return (\n        <div>\n            {\n                data && data.map((city) => (\n                    <Marker key={city.id} longitude={city.longitude} latitude={city.latitude} >\n                        {\n                            city.ipfsHash ?\n                                <StyledImg zoom={zoom} src={`https://ipfs.infura.io/ipfs/${city.ipfsHash}`} alt=\"city\" onClick={() => onClick(city)} /> :\n                                <StyledSvg\n                                    height={SIZE}\n                                    viewBox=\"0 0 24 24\"\n                                    onClick={() => onClick(city)}\n                                >\n                                    <path d={ICON} />\n                                </StyledSvg>\n                        }\n                    </Marker >\n                ))\n            }\n        </div >\n    )\n}\n\nexport default React.memo(Pins);","import React from \"react\"\nimport styled from \"styled-components\"\nimport BigNumber from \"bignumber.js\"\nimport { getBalanceNumber } from \"utils/formatBalance\"\nimport { Text, Button, Heading, Flex, Box, BaseLayout, LinkExternal } from \"leek-uikit\"\nimport truncateWalletAddress from \"utils/truncateWalletAddress\"\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from \"components/UnlockButton\"\nimport { getChainExplorerUrl } from \"utils/chainExplorer\"\nimport { bidStore } from \"../store/store\"\nimport { SHOW_FORM } from \"../store/reducer\"\nimport { useGetBaseInfo } from \"../api/index\"\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nconst BillboardLayout = styled(BaseLayout)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding:30px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 0.8fr 1fr;\n  }\n`\n\nconst BillboardDetails = (props) => {\n    const { info } = props;\n    const { ipfsHash, desc, bidLevel, owner } = info;\n    const baseInfo = useGetBaseInfo();\n    const basePrice = baseInfo && baseInfo.basePrice\n    const formatedBasePrice = getBalanceNumber(new BigNumber(basePrice));\n    const { account } = useWallet()\n\n    const bid = () => {\n        bidStore.dispatch({ type: SHOW_FORM })\n    }\n\n\n    return (\n        <BillboardLayout>\n            <img src={`https://ipfs.infura.io/ipfs/${ipfsHash}`} alt=\"city\" width={200} height={200} />\n            <Box>\n                <div style={{ marginBottom: \"10px\" }}>\n                    <Heading size=\"lg\" color=\"secondary\">{desc}</Heading>\n                </div>\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Owner:</Text>\n                    <LinkExternal href={getChainExplorerUrl(chainId, owner)}>{truncateWalletAddress(owner)}</LinkExternal>\n                </Flex>\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Bid Level:</Text>\n                    <Text>{bidLevel}</Text>\n                </Flex>\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Bid Price:</Text>\n                    <Text>{formatedBasePrice * bidLevel} LEEK</Text>\n                </Flex>\n\n                {\n                    account ? <Button size=\"sm\" mt=\"10px\" onClick={bid}>Bid Here</Button> : <UnlockButton size=\"sm\" mt=\"10px\" />\n                }\n\n            </Box>\n        </BillboardLayout>\n    )\n}\n\nexport default BillboardDetails","import React, { useState, useEffect } from 'react';\nimport MapGL, {\n    Popup,\n    NavigationControl,\n    FullscreenControl,\n    ScaleControl,\n    GeolocateControl\n} from 'react-map-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport Pins from './Pins';\nimport BillboardForm from './BillboardForm';\nimport BillboardDetails from './BillboardDetails';\nimport { useGetBillboardDetails } from \"../api/index\"\nimport { bidStore } from \"../store/store\"\nimport { HIDE_FORM } from '../store/reducer';\n\nconst TOKEN = process.env.REACT_APP_MAP_TOKEN\n\nconst geolocateStyle = {\n    top: 0,\n    left: 0,\n    padding: '10px'\n};\n\nconst fullscreenControlStyle = {\n    top: 36,\n    left: 0,\n    padding: '10px'\n};\n\nconst navStyle = {\n    top: 72,\n    left: 0,\n    padding: '10px'\n};\n\nconst scaleControlStyle = {\n    bottom: 36,\n    left: 0,\n    padding: '10px'\n};\n\nconst Map = () => {\n    const [viewport, setViewport] = useState({\n        latitude: 51.29,\n        longitude: 0,\n        zoom: 1.5,\n        bearing: 0,\n        pitch: 0\n    });\n\n    const cities = useGetBillboardDetails();\n\n    const { show } = bidStore.getState()\n\n    const [popupInfo, setPopupInfo] = useState(null);\n\n    useEffect(() => {\n        const mapbox = document.getElementsByClassName('mapboxgl-map')[0]\n        const closeButton = document.getElementsByClassName('mapboxgl-popup-close-button')[0]\n\n        if (mapbox) {\n            if (popupInfo) {\n                mapbox.setAttribute(\"style\", \"position: absolute; width: 100%; height: 100%; overflow: hidden; visibility: inherit; opacity:50%\")\n                closeButton.setAttribute('style', \"font-size:50px; width:50px;\")\n            } else {\n                mapbox.setAttribute('style', 'position: absolute; width: 100%; height: 100%; overflow: hidden; visibility: inherit;')\n\n            }\n        }\n    }, [popupInfo])\n\n    let comp = <BillboardForm info={popupInfo} setPopupInfo={setPopupInfo} />;\n\n    if (popupInfo && popupInfo.ipfsHash) {\n        if (show) {\n            comp = <BillboardForm info={popupInfo} setPopupInfo={setPopupInfo} />\n        } else {\n            comp = <BillboardDetails info={popupInfo} />\n        }\n    }\n\n\n    return (\n        <>\n            <MapGL\n                {...viewport}\n                width=\"100%\"\n                height=\"100vh\"\n                mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n                onViewportChange={setViewport}\n                mapboxApiAccessToken={TOKEN}\n            >\n\n                <Pins data={cities} onClick={setPopupInfo} zoom={viewport.zoom} />\n\n                {popupInfo && (\n                    <Popup\n                        tipSize={10}\n                        anchor=\"bottom\"\n                        longitude={popupInfo.longitude}\n                        latitude={popupInfo.latitude}\n                        closeOnClick={false}\n                        onClose={() => {\n                            setPopupInfo(null)\n                            bidStore.dispatch({ type: HIDE_FORM })\n                        }\n                        }\n                    >\n                        {comp}\n                    </Popup>\n                )}\n\n                <GeolocateControl style={geolocateStyle} />\n                <FullscreenControl style={fullscreenControlStyle} />\n                <NavigationControl style={navStyle} />\n                <ScaleControl style={scaleControlStyle} />\n            </MapGL>\n        </>\n    );\n}\n\nexport default Map","import React from \"react\";\nimport { Flex, Heading } from \"leek-uikit\";\nimport Hero from \"./Hero\";\nimport Map from \"./Map/MapBox\";\n\nconst Billboard = () => {\n    return (\n        <div>\n            <Hero />\n            <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                <Heading size=\"xl\" color=\"secondary\" mt=\"40px\" mb=\"40px\" fontSize=\"50px\">\n                    Participate our Billboard Right now!\n                </Heading>\n            </Flex>\n            <Map />\n        </div>\n    )\n}\n\nexport default Billboard\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getNodeUrl from 'utils/getRpcUrl'\n\nconst NODE_URL = getNodeUrl()\n\nlet urlProvider: any\nif (NODE_URL.startsWith('https://')) {\n  urlProvider = new Web3.providers.HttpProvider(NODE_URL, { timeout: 10000 } as HttpProviderOptions)\n} else if (NODE_URL.startsWith('wss://')) {\n  urlProvider = new Web3.providers.WebsocketProvider(NODE_URL)\n}\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || urlProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || urlProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getAirdropAddress, getBillboardAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport vesting from 'config/abi/vesting.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport airdrop from 'config/abi/airdrop.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport billboard from \"config/abi/billboard.json\"\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useAirdropContract = () => {\n  const abi = (airdrop as unknown) as AbiItem\n  return useContract(abi, getAirdropAddress())\n}\n\nexport const useBillboardContract = () => {\n  const abi = (billboard as unknown) as AbiItem\n  return useContract(abi, getBillboardAddress())\n}\n\nexport const useVestingContract = (address: string) => {\n  const vestingAbi = (vesting as unknown) as AbiItem\n  return useContract(vestingAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const getMainTokenBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.multipliedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { ETHERSCAN_PREFIXES } from 'config'\n\nexport const getChainExplorerUrl = (chainId: string, address: string) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/address/${address}`\n}\n\nexport const getTranscationHash = (chainId: string, hash: string) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/tx/${hash}`\n}\n\nexport const getBlockInfo = (chainId: string, block: number) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/block/${block}`\n}","import React from 'react'\nimport { Button, useWalletModal } from 'leek-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset, error } = useWallet()\n  const { onPresentConnectModal, onPresentWrongNetworkModal } = useWalletModal(connect, reset, error)\n  let comp\n  if (error) {\n    comp = (\n      <Button onClick={onPresentWrongNetworkModal} {...props} variant=\"danger\">\n        Wrong Network\n      </Button>\n    )\n  } else {\n    comp = (\n      <Button onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    )\n  }\n\n  return <div>{comp}</div>\n}\n\nexport default UnlockButton\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'leek',\n    tokenAddress: {\n      80001: '0xc657EFDb41eaBA15Cea84d34a2A60b18686FA929',\n      137: '0x67A32987a8EAA0644702C362B53B8EeBd126C20b',\n    },\n    idoAddress: {\n      80001: '0x8AaE8746bCFaAC6AC2927C1C9099943B4de5d7f3',\n      137: '0x0E9B41A5D64de6B4BF6e086417E813Df21707748',\n    },\n    isActive: false,\n    name: 'LEEK',\n    mainToken: 'MATIC',\n    subTitle: 'A community driven crypto and knowledge sharing DAO powered by $LEEK Social Token',\n    startTime: 1625625327,\n    endTime: 1626625327,\n    salesAmount: 500000,\n    projectSiteUrl: '#',\n    tokenDecimals: 18,\n  },\n]\n\nexport default ifos\n","import { Airdrop } from './types'\n\nconst airdrop: Airdrop =\n{\n    id: 'leek',\n    tokenAddress: {\n        80001: '0xc657EFDb41eaBA15Cea84d34a2A60b18686FA929',\n        137: '0x67A32987a8EAA0644702C362B53B8EeBd126C20b',\n    },\n    isActive: true,\n    name: 'LEEK',\n    description: 'A community driven crypto and knowledge sharing DAO powered by $LEEK Social Token',\n    tokenDecimals: 18,\n    projectSiteUrl: \"https://leekdao.xyz\",\n    totalAmount: 10000\n}\n\nexport default airdrop","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\nexport { default as airdropConfig } from \"./airdrop\"\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n    return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress","import { createStore } from 'redux'\nimport { reducer, billboardReducer, bidReducer } from './reducer'\n\nexport const store = createStore(reducer)\nexport const billboardStore = createStore(billboardReducer)\nexport const bidStore = createStore(bidReducer)\n\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport vestingABI from \"config/abi/vesting.json\"\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress, getVestingAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\n\nexport const useLockBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const vestingContract = getContract(vestingABI, getVestingAddress())\n      const bal = await vestingContract.methods.remainingTokens().call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [fastRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(15768000)\nexport const BSC_BLOCK_TIME = 2\n\nexport const CAKE_POOL_PID = 1\nexport const ETHERSCAN_PREFIXES = {\n  137: 'https://polygonscan.com',\n  80001: 'https://mumbai.polygonscan.com'\n}\n\n","import { City } from \"./types\"\n\nconst cities: City[] = [\n    {\n        \"id\": 1,\n        \"city\": \"Tokyo\",\n        \"latitude\": 35.685,\n        \"longitude\": 139.7514\n    },\n    {\n        \"id\": 2,\n        \"city\": \"New York\",\n        \"latitude\": 40.6943,\n        \"longitude\": -73.9249\n    },\n    {\n        \"id\": 3,\n        \"city\": \"Mexico City\",\n        \"latitude\": 19.4424,\n        \"longitude\": -99.131\n    },\n    {\n        \"id\": 4,\n        \"city\": \"Mumbai\",\n        \"latitude\": 19.017,\n        \"longitude\": 72.857\n    },\n    {\n        \"id\": 5,\n        \"city\": \"Sao Paulo\",\n        \"latitude\": -23.5587,\n        \"longitude\": -46.625\n    },\n    {\n        \"id\": 6,\n        \"city\": \"Delhi\",\n        \"latitude\": 28.67,\n        \"longitude\": 77.23\n    },\n    {\n        \"id\": 7,\n        \"city\": \"Shanghai\",\n        \"latitude\": 31.2165,\n        \"longitude\": 121.4365\n    },\n    {\n        \"id\": 8,\n        \"city\": \"Kolkata\",\n        \"latitude\": 22.495,\n        \"longitude\": 88.3247\n    },\n    {\n        \"id\": 9,\n        \"city\": \"Los Angeles\",\n        \"latitude\": 34.1139,\n        \"longitude\": -118.4068\n    },\n    {\n        \"id\": 10,\n        \"city\": \"Buenos Aires\",\n        \"latitude\": -34.6025,\n        \"longitude\": -58.3975\n    },\n    {\n        \"id\": 11,\n        \"city\": \"Cairo\",\n        \"latitude\": 30.05,\n        \"longitude\": 31.25\n    },\n    {\n        \"id\": 12,\n        \"city\": \"Rio de Janeiro\",\n        \"latitude\": -22.925,\n        \"longitude\": -43.225\n    },\n    {\n        \"id\": 13,\n        \"city\": \"Osaka\",\n        \"latitude\": 34.75,\n        \"longitude\": 135.4601\n    },\n    {\n        \"id\": 14,\n        \"city\": \"Beijing\",\n        \"latitude\": 39.9289,\n        \"longitude\": 116.3883\n    },\n    {\n        \"id\": 15,\n        \"city\": \"Manila\",\n        \"latitude\": 14.6042,\n        \"longitude\": 120.9822\n    },\n    {\n        \"id\": 16,\n        \"city\": \"Moscow\",\n        \"latitude\": 55.7522,\n        \"longitude\": 37.6155\n    },\n    {\n        \"id\": 17,\n        \"city\": \"Istanbul\",\n        \"latitude\": 41.105,\n        \"longitude\": 29.01\n    },\n    {\n        \"id\": 18,\n        \"city\": \"Paris\",\n        \"latitude\": 48.8667,\n        \"longitude\": 2.3333\n    },\n    {\n        \"id\": 19,\n        \"city\": \"Seoul\",\n        \"latitude\": 37.5663,\n        \"longitude\": 126.9997\n    },\n    {\n        \"id\": 20,\n        \"city\": \"Jakarta\",\n        \"latitude\": -6.1744,\n        \"longitude\": 106.8294\n    },\n    {\n        \"id\": 21,\n        \"city\": \"Guangzhou\",\n        \"latitude\": 23.145,\n        \"longitude\": 113.325\n    },\n    {\n        \"id\": 22,\n        \"city\": \"Chicago\",\n        \"latitude\": 41.8373,\n        \"longitude\": -87.6861\n    },\n    {\n        \"id\": 23,\n        \"city\": \"London\",\n        \"latitude\": 51.5,\n        \"longitude\": -0.1167\n    },\n    {\n        \"id\": 24,\n        \"city\": \"Shenzhen\",\n        \"latitude\": 22.5524,\n        \"longitude\": 114.1221\n    },\n    {\n        \"id\": 25,\n        \"city\": \"Wuhan\",\n        \"latitude\": 30.58,\n        \"longitude\": 114.27\n    },\n    {\n        \"id\": 26,\n        \"city\": \"Hong Kong\",\n        \"latitude\": 22.305,\n        \"longitude\": 114.185\n    },\n    {\n        \"id\": 27,\n        \"city\": \"Bangalore\",\n        \"latitude\": 12.97,\n        \"longitude\": 77.56\n    },\n    {\n        \"id\": 28,\n        \"city\": \"Bangkok\",\n        \"latitude\": 13.75,\n        \"longitude\": 100.5166\n    },\n    {\n        \"id\": 29,\n        \"city\": \"Miami\",\n        \"latitude\": 25.784,\n        \"longitude\": -80.2102\n    },\n    {\n        \"id\": 30,\n        \"city\": \"Santiago\",\n        \"latitude\": -33.45,\n        \"longitude\": -70.667\n    },\n    {\n        \"id\": 31,\n        \"city\": \"Madrid\",\n        \"latitude\": 40.4,\n        \"longitude\": -3.6834\n    },\n    {\n        \"id\": 32,\n        \"city\": \"Houston\",\n        \"latitude\": 29.7868,\n        \"longitude\": -95.3905\n    },\n    {\n        \"id\": 33,\n        \"city\": \"Ho Chi Minh City\",\n        \"latitude\": 10.78,\n        \"longitude\": 106.695\n    },\n    {\n        \"id\": 34,\n        \"city\": \"Washington\",\n        \"latitude\": 38.8951,\n        \"longitude\": -77.0364\n    },\n    {\n        \"id\": 35,\n        \"city\": \"Toronto\",\n        \"latitude\": 43.7,\n        \"longitude\": -79.42\n    },\n    {\n        \"id\": 36,\n        \"city\": \"Singapore\",\n        \"latitude\": 1.293,\n        \"longitude\": 103.8558\n    },\n    {\n        \"id\": 37,\n        \"city\": \"Barcelona\",\n        \"latitude\": 41.3833,\n        \"longitude\": 2.1834\n    },\n    {\n        \"id\": 38,\n        \"city\": \"Sydney\",\n        \"latitude\": -33.92,\n        \"longitude\": 151.1852\n    },\n    {\n        \"id\": 39,\n        \"city\": \"Melbourne\",\n        \"latitude\": -37.82,\n        \"longitude\": 144.975\n    },\n    {\n        \"id\": 40,\n        \"city\": \"Chengdu\",\n        \"latitude\": 30.67,\n        \"longitude\": 104.07\n    },\n    {\n        \"id\": 41,\n        \"city\": \"Berlin\",\n        \"latitude\": 52.5218,\n        \"longitude\": 13.4015\n    },\n    {\n        \"id\": 42,\n        \"city\": \"Rome\",\n        \"latitude\": 41.896,\n        \"longitude\": 12.4833\n    },\n    {\n        \"id\": 43,\n        \"city\": \"Auckland\",\n        \"latitude\": -36.8481,\n        \"longitude\": 174.763\n    }\n]\n\nexport default cities","import cities from \"config/constants/location\"\n\nconst defaultState = {\n    bidHash: '',\n}\n\nconst billboardState = cities\n\nconst formState = {\n    show: false\n}\n\nexport const GET_BID_BILLBOARD_HASH = 'GET_BID_BILLBOARD_HASH'\nexport const GET_BILLBOARD_DETAILS = 'GET_BILLBOARD_DETAILS'\nexport const SHOW_FORM = 'SHOW_FORM'\nexport const HIDE_FORM = 'HIDE_FORM'\n\nexport const reducer = (state = defaultState, action) => {\n    if (action.type === GET_BID_BILLBOARD_HASH) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.bidHash = action.bidHash\n        return newState\n    }\n    return state\n}\n\nexport const billboardReducer = (state = billboardState, action) => {\n    if (action.type === GET_BILLBOARD_DETAILS) {\n        const newState = JSON.parse(JSON.stringify(state))\n        return newState\n    }\n    return state\n}\n\nexport const bidReducer = (state = formState, action) => {\n    if (action.type === SHOW_FORM) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.show = true\n        return newState\n    }\n\n    if (action.type === HIDE_FORM) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.show = false\n        return newState\n    }\n\n    return state\n}","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n\nexport const useBillboardApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return { onApprove }\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n    gap?: 'sm' | 'md' | 'lg' | string\n    justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column","import { useEffect, useState } from \"react\"\nimport { useBillboardContract } from \"hooks/useContract\"\nimport useRefresh from \"hooks/useRefresh\"\nimport { billboardStore } from '../store/store';\n\n\ninterface billboardBaseInfo {\n    basePrice: number\n    minimumTokenAmount: number\n}\n\nexport const useGetBaseInfo = () => {\n    const [baseInfo, setBaseInfo] = useState<billboardBaseInfo>()\n    const contract = useBillboardContract()\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchData = async () => {\n            try {\n                const [basePrice, minimumTokenAmount] = await Promise.all([\n                    contract.methods.basePrice().call(),\n                    contract.methods.minimumTokenAmountToCreate().call(),\n                ])\n\n                if (mounted) {\n                    setBaseInfo({\n                        basePrice,\n                        minimumTokenAmount\n                    })\n                }\n            } catch (err) {\n                console.error(\"Unable to fetch base price\", err.response)\n            }\n        }\n        fetchData();\n        return () => {\n            mounted = false\n        }\n    }, [contract.methods])\n    return baseInfo\n}\n\nexport const useGetBillboardDetails = () => {\n    const [billboardDetails, setBillboardDetails] = useState(null)\n    const contract = useBillboardContract()\n    const cities = billboardStore.getState()\n    const { slowRefresh } = useRefresh()\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchData = async () => {\n            try {\n                const billboards = await contract.methods.getAllBillBoards().call();\n                const newBillboards = {}\n\n                billboards.forEach(billboard => {\n                    const { id, desc, owner, ipfsHash, bidLevel } = billboard;\n                    const isBid = billboard.init;\n\n                    newBillboards[id] = {\n                        id,\n                        desc,\n                        isBid,\n                        owner,\n                        ipfsHash,\n                        bidLevel\n                    }\n                })\n\n                const billboardsDetails = []\n\n                cities.forEach(city => {\n                    const { id } = city\n                    const billboardData = newBillboards[id];\n\n                    if (billboardData) {\n                        billboardsDetails.push({\n                            ...city,\n                            ...billboardData\n                        })\n                    } else {\n                        billboardsDetails.push(city)\n                    }\n                })\n\n                if (mounted) {\n                    setBillboardDetails(billboardsDetails)\n                }\n\n            } catch (err) {\n                console.error(\"Unable to fetch billboard details\", err.response)\n            }\n        }\n        fetchData();\n        return () => {\n            mounted = false\n        }\n    }, [contract.methods, billboardDetails, cities, slowRefresh])\n    return billboardDetails\n}"],"sourceRoot":""}
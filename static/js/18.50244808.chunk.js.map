{"version":3,"sources":["state/types.ts","views/Voting/components/TabMenu.tsx","views/Voting/components/Filters.tsx","config/constants/voting.ts","config/graphql/query.ts","views/Voting/helper.ts","components/Tags.tsx","views/Voting/components/tags.tsx","views/Voting/components/ProposalsLoading.tsx","views/Voting/components/TimeFrame.tsx","views/Voting/components/ProposalRow.tsx","views/Voting/components/DesktopImage.tsx","views/Voting/Hero.tsx","views/Voting/index.tsx"],"names":["ProposalType","ProposalState","StyledTabMenu","styled","div","theme","colors","input","getIndexFromType","proposalType","COMMUNITY","ALL","CORE","TabMenu","onTypeChange","activeIndex","onItemClick","index","getTypeFromIndex","alignItems","color","mr","StyledFilters","Flex","attrs","borderColor","FilterLabel","label","options","value","ACTIVE","PENDING","CLOSED","Filters","filterState","onFilterChange","isLoading","map","scale","checked","onChange","evt","radioValue","currentTarget","disabled","ml","LEEKDAO_SPACE","ADMIN_ADDRESS","LOAD_PROPOSALS","gql","isCoreProposal","author","findIndex","item","filterProposalsByType","proposals","filter","proposal","CoreTag","props","variant","outline","startIcon","width","CommunityTag","VoteNowTag","SoonTag","ClosedTag","ProposalStateTag","proposalState","ProposalTypeTag","Row","Wrapper","ProposalsLoading","times","justifyContent","py","px","style","flex","height","mb","TimeFrame","startDate","endDate","textProps","fontSize","moment","utc","Number","format","StyledProposalRow","ProposalRow","comp","state","type","votingLink","data","useQuery","variables","useState","setProposals","setLoading","useEffect","length","onClick","url","id","window","open","location","href","as","bold","title","start","end","marginLeft","p","DesktopImage","Image","mediaQueries","lg","StyledHero","Box","gradients","bubblegum","Title","Heading","size","primary","newPage","Hero","Container","pr","src","secondary","errorLink","onError","graphQLErrors","networkError","message","locations","path","console","warn","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","Proposals","setState","ApolloProvider","newProposalType","prevState","newFilterState"],"mappings":"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","file":"static/js/18.50244808.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { FarmConfig, PoolConfig } from 'config/constants/types'\n\nexport interface Farm extends FarmConfig {\n  tokenAmount?: BigNumber\n  // quoteTokenAmount?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: number\n  depositFeeBP?: number\n  leekPerBlock?: number\n  userData?: {\n    allowance: BigNumber\n    tokenBalance: BigNumber\n    stakedBalance: BigNumber\n    earnings: BigNumber\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n}\n\nexport interface PoolsState {\n  data: Pool[]\n}\n\n// Global state\n\nexport interface State {\n  farms: FarmsState\n  pools: PoolsState\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Proposal {\n  id: string\n  start: number\n  end: number\n  state: ProposalState\n  title: string\n  author: string\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from 'leek-uikit'\nimport { ProposalType } from 'state/types'\n\ninterface TabMenuProps {\n    proposalType: ProposalType\n    onTypeChange: (proposalType: ProposalType) => void\n}\n\nconst StyledTabMenu = styled.div`\n  background-color: ${({ theme }) => theme.colors.input};\n  padding-top: 16px;\n`\n\nconst getIndexFromType = (proposalType: ProposalType) => {\n    switch (proposalType) {\n        case ProposalType.COMMUNITY:\n            return 1\n        case ProposalType.ALL:\n            return 2\n        case ProposalType.CORE:\n        default:\n            return 0\n    }\n}\n\nconst getTypeFromIndex = (index: number) => {\n    switch (index) {\n        case 1:\n            return ProposalType.COMMUNITY\n        case 2:\n            return ProposalType.ALL\n        default:\n            return ProposalType.CORE\n    }\n}\n\nconst TabMenu: React.FC<TabMenuProps> = ({ proposalType, onTypeChange }) => {\n    const handleItemClick = (index: number) => {\n        onTypeChange(getTypeFromIndex(index))\n    }\n\n    return (\n        <StyledTabMenu>\n            <UIKitTabMenu activeIndex={getIndexFromType(proposalType)} onItemClick={handleItemClick}>\n                <Tab>\n                    <Flex alignItems=\"center\">\n                        <VerifiedIcon color=\"currentColor\" mr=\"4px\" />\n                        Core\n                    </Flex>\n                </Tab>\n                <Tab>\n                    {' '}\n                    <Flex alignItems=\"center\">\n                        <CommunityIcon color=\"currentColor\" mr=\"4px\" />\n                        Community\n                    </Flex>\n                </Tab>\n                <Tab>All</Tab>\n            </UIKitTabMenu>\n        </StyledTabMenu>\n    )\n}\n\nexport default TabMenu\n","import React, { ChangeEvent } from 'react'\nimport { Flex, Radio, Text } from 'leek-uikit'\nimport styled from 'styled-components'\nimport { ProposalState } from 'state/types'\n\ninterface FiltersProps {\n    filterState: ProposalState\n    onFilterChange: (filterState: ProposalState) => void\n    isLoading: boolean\n}\n\nconst StyledFilters = styled(Flex).attrs({ alignItems: 'center' })`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding: 16px 24px;\n`\n\nconst FilterLabel = styled.label`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  margin-right: 16px;\n`\n\nconst options = [\n    { value: ProposalState.ACTIVE, label: 'Vote Now' },\n    { value: ProposalState.PENDING, label: 'Soon' },\n    { value: ProposalState.CLOSED, label: 'Closed' },\n]\n\nconst Filters: React.FC<FiltersProps> = ({ filterState, onFilterChange, isLoading }) => {\n    return (\n        <StyledFilters>\n            {options.map(({ value, label }) => {\n                const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n                    const { value: radioValue } = evt.currentTarget\n                    onFilterChange(radioValue as ProposalState)\n                }\n\n                return (\n                    <FilterLabel key={label}>\n                        <Radio\n                            scale=\"sm\"\n                            value={value}\n                            checked={filterState === value}\n                            onChange={handleChange}\n                            disabled={isLoading}\n                        />\n                        <Text ml=\"8px\">{label}</Text>\n                    </FilterLabel>\n                )\n            })}\n        </StyledFilters>\n    )\n}\n\nexport default Filters","export const PROPOSALS_TO_SHOW = 10\nexport const LEEKDAO_SPACE = \"leekdao.eth\"\nexport const ADMIN_ADDRESS = [\n    \"0xc0e9ec12f342b279676F8f0Cb4268B2F147F1cfB\",\n    \"0x597737d15b4371B10b6Fc5647903AB775E214864\"\n]\n","import { gql } from \"@apollo/client\";\nimport { LEEKDAO_SPACE } from \"../constants/voting\"\n\nconst LOAD_PROPOSALS = gql`\n    query Proposals($state:String!) {\n    proposals(\n        first: 20,\n        skip: 0,\n        where: {\n            space_in: [\"${LEEKDAO_SPACE}\"],\n            state:$state\n        },\n        orderBy: \"created\",\n        orderDirection: desc\n    ) {\n        id\n        title\n        start\n        end\n        state\n        author\n    }\n    }\n`;\n\nexport default LOAD_PROPOSALS;","import { ADMIN_ADDRESS } from 'config/constants/voting'\nimport { Proposal, ProposalType } from 'state/types'\n\nexport const isCoreProposal = (author: string) => {\n    return ADMIN_ADDRESS.findIndex(item => item === author) > -1\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n    switch (proposalType) {\n        case ProposalType.COMMUNITY:\n            return proposals.filter((proposal) => !isCoreProposal(proposal.author))\n        case ProposalType.CORE:\n            return proposals.filter((proposal) => isCoreProposal(proposal.author))\n        case ProposalType.ALL:\n        default:\n            return proposals\n    }\n}\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, VoteIcon, TimerIcon, BlockIcon } from 'leek-uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />}{...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />}{...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nconst VoteNowTag = () => {\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon />} >\n      Vote Now\n    </Tag>\n  )\n}\n\nconst SoonTag = () => {\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon />}>\n      Soon\n    </Tag>\n  )\n}\n\nconst ClosedTag = () => {\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon />}>\n      Closed\n    </Tag >\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag, VoteNowTag, SoonTag, ClosedTag }\n","import React from 'react'\nimport { TagProps } from 'leek-uikit'\nimport { CommunityTag, CoreTag, VoteNowTag, SoonTag, ClosedTag } from 'components/Tags'\nimport { ProposalState } from 'state/types'\n\ninterface ProposalStateTagProps extends TagProps {\n    proposalState: ProposalState\n}\n\nexport const ProposalStateTag: React.FC<ProposalStateTagProps> = ({ proposalState }) => {\n    if (proposalState === ProposalState.ACTIVE) {\n        return <VoteNowTag />\n    }\n\n    if (proposalState === ProposalState.PENDING) {\n        return <SoonTag />\n    }\n\n    return <ClosedTag />\n}\n\ninterface ProposalTypeTagProps extends TagProps {\n    isCoreProposal: boolean\n}\n\nexport const ProposalTypeTag: React.FC<ProposalTypeTagProps> = ({ isCoreProposal, ...props }) => {\n    if (isCoreProposal) {\n        return <CoreTag {...props} />\n    }\n\n    return <CommunityTag {...props} />\n}","import React from 'react'\nimport { Box, Flex, Skeleton } from 'leek-uikit'\nimport styled from 'styled-components'\nimport times from 'lodash/times'\nimport { PROPOSALS_TO_SHOW } from 'config/constants/voting'\n\nconst Row = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n`\n\nconst Wrapper = styled.div`\n  ${Row}:last-child {\n    border-bottom: 0;\n  }\n`\n\nconst ProposalsLoading = () => {\n    return (\n        <Wrapper>\n            {times(PROPOSALS_TO_SHOW).map((index) => (\n                <Row key={index} alignItems=\"center\" justifyContent=\"space-between\" py=\"16px\" px=\"24px\">\n                    <Box style={{ flex: 1 }}>\n                        <Skeleton height=\"21px\" width=\"70%\" mb=\"4px\" />\n                        <Skeleton height=\"21px\" width=\"30%\" mb=\"4px\" />\n                        <Skeleton height=\"21px\" width=\"40%\" />\n                    </Box>\n                    <Skeleton height=\"32px\" width=\"32px\" />\n                </Row>\n            ))}\n        </Wrapper>\n    )\n}\n\nexport default ProposalsLoading","import React from 'react'\nimport { Text } from 'leek-uikit'\nimport moment from 'moment'\nimport { ProposalState } from 'state/types'\n\ninterface TimeFrameProps {\n    startDate: number\n    endDate: number\n    proposalState: ProposalState\n}\n\nconst TimeFrame: React.FC<TimeFrameProps> = ({ startDate, endDate, proposalState }) => {\n    const textProps = {\n        fontSize: '16px',\n        color: 'textSubtle',\n        ml: '8px',\n    }\n\n    if (proposalState === ProposalState.CLOSED) {\n        return <Text {...textProps}>Ended\n            <span> {moment.utc(Number(endDate) * 1000).format('MMMM Do YYYY, HH:mm')} UTC</span>\n        </Text >\n    }\n\n    if (proposalState === ProposalState.PENDING) {\n        return <Text {...textProps}>Starts\n            <span> {moment.utc(Number(startDate) * 1000).format('MMMM Do YYYY, HH:mm')} UTC</span>\n        </Text >\n    }\n\n    return <Text {...textProps}>Ends\n        <span> {moment.utc(Number(endDate) * 1000).format('MMMM Do YYYY, HH:mm')} UTC</span>\n    </Text >\n}\n\nexport default TimeFrame","import React, { useState, useEffect } from 'react'\nimport { ArrowForwardIcon, Box, IconButton, Flex, Text, Heading } from 'leek-uikit'\nimport { useQuery } from \"@apollo/client\";\nimport LOAD_PROPOSALS from \"config/graphql/query\";\nimport styled from 'styled-components'\nimport { ProposalType } from 'state/types'\nimport { LEEKDAO_SPACE } from \"config/constants/voting\"\nimport { isCoreProposal, filterProposalsByType } from '../helper';\nimport { ProposalStateTag, ProposalTypeTag } from './tags'\nimport ProposalsLoading from './ProposalsLoading';\nimport TimeFrame from './TimeFrame';\n\ninterface StateProps {\n    state: string,\n    type: ProposalType\n}\n\nconst StyledProposalRow = styled.div`\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  display: flex;\n  padding: 16px 24px;\n\n  &:hover {\n    background-color:#f7f7f7;\n    cursor:pointer;\n  }\n`\n\nconst newPage = (url) => {\n    const w = window.open('about:blank');\n    w.location.href = url;\n}\n\n\nconst ProposalRow: React.FC<StateProps> = ({ state, type }) => {\n    const votingLink = `https://snapshot.org/#/${LEEKDAO_SPACE}/proposal/`\n    const { data } = useQuery(LOAD_PROPOSALS, {\n        variables: {\n            state\n        }\n    });\n    const [proposals, setProposals] = useState([]);\n    const [isLoading, setLoading] = useState(false)\n\n    useEffect(() => {\n        setLoading(true);\n        if (data) {\n            setProposals(data.proposals)\n            setLoading(false);\n        }\n    }, [data]);\n\n    let comp;\n    if (isLoading) {\n        comp = <ProposalsLoading />\n    } else if (filterProposalsByType(proposals, type).length > 0) {\n        comp = filterProposalsByType(proposals, type).map((item) => (\n            <StyledProposalRow onClick={() => newPage(votingLink + item.id)} key={item.id}>\n                <Box as=\"span\" style={{ flex: 1 }}>\n                    <Text bold mb=\"8px\">{item.title}</Text>\n                    <Flex alignItems=\"center\" mb=\"8px\">\n                        <TimeFrame startDate={item.start} endDate={item.end} proposalState={item.state} />\n                    </Flex>\n                    <Flex alignItems=\"center\">\n                        <ProposalStateTag proposalState={item.state} />\n                        <span style={{ marginLeft: \"8px\" }}>\n                            <ProposalTypeTag isCoreProposal={isCoreProposal(item.author)} />\n                        </span>\n                    </Flex>\n                </Box>\n                <IconButton variant=\"text\">\n                    <ArrowForwardIcon width=\"24px\" />\n                </IconButton>\n            </StyledProposalRow>\n        ))\n    } else {\n        comp = <Flex alignItems=\"center\" justifyContent=\"center\" p=\"32px\">\n            <Heading as=\"h5\">No proposals found</Heading>\n        </Flex>\n    }\n\n    return (\n        <div>{comp}</div>\n    )\n}\n\nexport default ProposalRow","import { Image } from 'leek-uikit'\nimport styled from 'styled-components'\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nexport default DesktopImage","import React from 'react'\nimport { Box, Button, Flex, Heading } from 'leek-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\nimport DesktopImage from './components/DesktopImage'\n\nconst StyledHero = styled(Box)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst newPage = () => {\n    const w = window.open('about:blank');\n    w.location.href = \"https://snapshot.org/#/leekdao.eth/create\";\n}\n\nconst Hero = () => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            Voting\n                        </Title>\n                        <Heading mb=\"16px\">\n                            Have your say in the future of the LEEKDAO Ecosystem\n                        </Heading>\n                        <Button onClick={newPage}>\n                            Make a Proposal\n                        </Button>\n                    </Box>\n                    <DesktopImage src=\"./images/voting/voting-presents.png\" width={250} height={250} />\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import React, { useState } from 'react'\nimport { Card, Heading } from 'leek-uikit'\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport Container from 'components/layout/Container'\nimport { ProposalType, ProposalState } from 'state/types'\nimport styled from \"styled-components\"\nimport TabMenu from './components/TabMenu'\nimport Filters from './components/Filters'\nimport ProposalRow from './components/ProposalRow'\nimport Hero from './Hero'\n\ninterface State {\n    proposalType: ProposalType\n    filterState: ProposalState\n}\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n    if (graphQLErrors)\n        graphQLErrors.map(({ message, locations, path }) =>\n            console.warn(\n                `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n            )\n        );\n    if (networkError) console.warn(`[Network error]: ${networkError}`);\n});\n\nconst link = from([\n    errorLink,\n    new HttpLink({ uri: \"https://hub.snapshot.page/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link,\n});\n\nconst Proposals = () => {\n    const [state, setState] = useState<State>({\n        proposalType: ProposalType.CORE,\n        filterState: ProposalState.ACTIVE,\n    })\n\n    const handleProposalTypeChange = (newProposalType: ProposalType) => {\n        setState((prevState) => ({\n            ...prevState,\n            proposalType: newProposalType,\n        }))\n    }\n\n    const handleFilterChange = (newFilterState: ProposalState) => {\n        setState((prevState) => ({\n            ...prevState,\n            filterState: newFilterState,\n        }))\n    }\n    const { proposalType, filterState } = state\n\n    return (\n        <ApolloProvider client={client}>\n            <Hero />\n            <Container>\n                <Title>Proposals</Title>\n                <Card>\n                    <TabMenu proposalType={proposalType} onTypeChange={handleProposalTypeChange} />\n                    <Filters filterState={filterState} onFilterChange={handleFilterChange} isLoading={false} />\n                    <ProposalRow state={filterState} type={proposalType} />\n                </Card>\n            </Container>\n        </ApolloProvider>\n    )\n}\n\nexport default Proposals\n"],"sourceRoot":""}
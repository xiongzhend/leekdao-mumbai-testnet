{"version":3,"sources":["../node_modules/numeral/numeral.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/loadjs/dist/loadjs.umd.js","../node_modules/bignumber.js/bignumber.mjs","../node_modules/react-twitter-widgets/es/utils.js","../node_modules/react-twitter-widgets/es/index.js"],"names":["define","numeral","_","VERSION","formats","locales","defaults","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","options","Numeral","input","number","this","_input","_value","value","kind","unformatFunction","regexp","isNumeral","isNaN","replace","length","regexps","unformat","match","stringToNumber","Number","version","obj","numberToFormat","format","roundingFunction","abbrForce","abs","int","precision","signed","thousands","output","locale","negP","optDec","leadingCount","abbr","trillion","billion","million","thousand","decimal","neg","Math","includes","indexOf","RegExp","abbreviations","toString","split","toFixed","delimiters","slice","String","i","string","abbreviation","stringOriginal","currency","symbol","pow","min","search","insert","subString","start","reduce","array","callback","TypeError","t","Object","len","k","arguments","multiplier","x","parts","correctionFactor","Array","prototype","call","accum","next","mn","maxDecimals","optionals","boundedPrecision","optionalsRegExp","power","splitValue","minDecimals","max","key","toLowerCase","localeData","Error","reset","property","register","type","name","validate","val","culture","_decimalSep","_thousandSep","_currSymbol","_valArray","_abbrObj","_thousandRegEx","temp","console","warn","trim","e","substr","fn","clone","inputString","formatFunction","round","set","add","corrFactor","cback","curr","currI","O","subtract","multiply","divide","difference","ordinal","b","space","splice","join","base","suffixes","binary","unformatRegex","concat","filter","item","bytes","suffix","bytesMultiplier","symbols","before","after","toExponential","hours","floor","minutes","seconds","timeArray","module","exports","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","subscribe","bundleIds","callbackFn","push","bundleId","r","depsNotFound","numWaiting","pathsNotFound","publish","q","executeCallbacks","args","success","error","loadFile","path","numTries","isLegacyIECss","doc","document","async","maxTries","numRetries","beforeCallbackFn","pathname","pathStripped","test","createElement","rel","href","relList","as","src","undefined","onload","onerror","onbeforeload","ev","result","sheet","cssText","code","defaultPrevented","head","appendChild","loadFiles","paths","loadjs","arg1","arg2","loadFn","resolve","reject","returnPromise","Promise","ready","deps","done","isDefined","isNumeric","mathceil","ceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","n","coeffToString","a","s","z","j","charCodeAt","compare","y","xc","c","yc","l","intCheck","isOdd","str","charAt","toFixedPoint","zs","BigNumber","configObject","div","convertBase","parseNumeric","P","constructor","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","ALPHABET","v","alphabet","caseChanged","isNum","_isBigNumber","substring","DEBUG","toUpperCase","rm","id","c0","ne","maxOrMin","method","m","normalise","pop","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","p","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","random","pow2_53","random53bitInt","dp","rand","Uint32Array","copy","sum","plus","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","xlo","xhi","carry","klo","khi","aL","bL","cmp","more","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p1","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","shiftedBy","squareRoot","sqrt","rep","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","Symbol","toStringTag","for","_extends","assign","target","source","apply","twScriptWindowFieldName","twScriptName","canUseDOM","window","is","useShallowCompareMemoize","ref","useRef","objA","objB","keysA","keys","keysB","isShallowEqual","current","cloneShallow","asyncGeneratorStep","gen","_next","_throw","arg","info","then","childDivIdentifyingAttribute","useTwitterWidget","factoryFunctionName","primaryArg","onLoad","_useState","useState","setError","useEffect","node","attribute","isCanceled","loadWidget","_ref","_regeneratorRuntime","mark","_callee","childEl","wf","wrap","_context","prev","abrupt","setAttribute","rejectWithError","twttr","widgets","sent","t0","remove","stop","self","err","querySelectorAll","forEach","child","hasAttribute","Timeline","_ref6","dataSource","renderError","_useTwitterWidget5","React"],"mappings":"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","file":"static/js/9.84746dec.chunk.js","sourcesContent":["/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n","module.exports = require(\"regenerator-runtime\");\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathname = path.replace(/[\\?|#].*$/, ''),\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isLegacyIECss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(pathname)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n *   callback or (3) object literal with success/error arguments, numRetries,\n *   etc.\n * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n *   literal with success/error arguments, numRetries, etc.\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                     not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if only one character,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport loadjs from \"loadjs\";\nimport { useRef } from \"react\";\nvar twScriptUrl = \"https://platform.twitter.com/widgets.js\";\nvar twScriptWindowFieldName = \"twttr\";\nvar twScriptName = twScriptWindowFieldName;\nexport var canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nexport function twLoad() {\n  loadjs(twScriptUrl, twScriptName);\n}\nexport function twWidgetFactory() {\n  return new Promise(function (resolve, reject) {\n    var rejectWithError = function rejectWithError() {\n      return reject(new Error(\"Could not load remote twitter widgets js\"));\n    };\n\n    loadjs.ready(twScriptName, {\n      success: function success() {\n        // Ensure loaded\n        var twttr = window[twScriptWindowFieldName];\n\n        if (!twttr || !twttr.widgets) {\n          rejectWithError();\n        }\n\n        resolve(twttr.widgets);\n      },\n      error: rejectWithError\n    });\n  });\n}\nexport function removeChildrenWithAttribute(node, attribute) {\n  if (node) {\n    node.querySelectorAll(\"*\").forEach(function (child) {\n      if (child.hasAttribute(attribute)) {\n        child.remove();\n      }\n    });\n  }\n}\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction isShallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function useShallowCompareMemoize(value) {\n  var ref = useRef();\n\n  if (!isShallowEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\nexport function cloneShallow(value) {\n  return typeof value === \"object\" ? _extends({}, value) : value;\n}","import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { canUseDOM, twLoad, useShallowCompareMemoize, removeChildrenWithAttribute, twWidgetFactory, cloneShallow } from \"./utils\";\n\nif (canUseDOM) {\n  twLoad();\n}\n\nvar childDivIdentifyingAttribute = \"twdiv\";\n\nfunction useTwitterWidget(factoryFunctionName, primaryArg, options, onLoad) {\n  var _useState = useState(null),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var ref = useRef(null); // noop if ssr\n\n  if (!canUseDOM) {\n    return {\n      ref: ref,\n      error: error\n    };\n  } // Make deps for useEffect.\n  // options, and possibly primaryArg, are objects that should be compared (shallow).\n  // There currently aren't any nested arrays or objects, so they\n  // can be cloned in a shallow manner.\n  // NOTE onLoad is used in useCallback, but it is not listed as a dependency.\n  // Listing it would likely cause unnecessary loads. The latest onLoad should be\n  // used regardless, since it will not be called unless the other dependencies\n  // change, so it works out.\n\n\n  var deps = [factoryFunctionName, useShallowCompareMemoize(primaryArg), useShallowCompareMemoize(options)];\n  useEffect(function () {\n    // Reset error\n    setError(null); // Protect against race conditions\n    // (set to true in cleanup function;\n    // checked if canceled in async loadWidget)\n\n    var isCanceled = false;\n\n    if (ref.current) {\n      var loadWidget = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var childEl, wf, resultMaybe;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(!ref || !ref.current)) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 2:\n                  childEl = document.createElement(\"div\");\n                  childEl.setAttribute(childDivIdentifyingAttribute, \"yes\");\n                  ref.current.appendChild(childEl);\n                  _context.prev = 5;\n                  _context.next = 8;\n                  return twWidgetFactory();\n\n                case 8:\n                  wf = _context.sent;\n                  _context.next = 11;\n                  return wf[factoryFunctionName](cloneShallow(primaryArg), childEl, cloneShallow(options));\n\n                case 11:\n                  resultMaybe = _context.sent;\n\n                  if (!(!resultMaybe && !isCanceled)) {\n                    _context.next = 14;\n                    break;\n                  }\n\n                  throw new Error(\"Twitter could not create widget. If it is a Timeline or \" + \"Tweet, ensure the screenName/tweetId exists.\");\n\n                case 14:\n                  _context.next = 21;\n                  break;\n\n                case 16:\n                  _context.prev = 16;\n                  _context.t0 = _context[\"catch\"](5);\n                  console.error(_context.t0);\n                  setError(_context.t0);\n                  return _context.abrupt(\"return\");\n\n                case 21:\n                  if (!(!ref || !ref.current)) {\n                    _context.next = 23;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 23:\n                  if (!isCanceled) {\n                    _context.next = 26;\n                    break;\n                  }\n\n                  if (childEl) {\n                    childEl.remove();\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 26:\n                  if (onLoad) {\n                    onLoad();\n                  }\n\n                case 27:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[5, 16]]);\n        }));\n\n        return function loadWidget() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      removeChildrenWithAttribute(ref.current, childDivIdentifyingAttribute);\n      loadWidget();\n    }\n\n    return function () {\n      isCanceled = true;\n    };\n  }, deps);\n  return {\n    ref: ref,\n    error: error\n  };\n}\n\nexport var Follow = function Follow(_ref2) {\n  var username = _ref2.username,\n      options = _ref2.options,\n      onLoad = _ref2.onLoad,\n      renderError = _ref2.renderError;\n\n  var _useTwitterWidget = useTwitterWidget(\"createFollowButton\", username, options, onLoad),\n      ref = _useTwitterWidget.ref,\n      error = _useTwitterWidget.error;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, error && renderError && renderError(error));\n};\nexport var Hashtag = function Hashtag(_ref3) {\n  var hashtag = _ref3.hashtag,\n      options = _ref3.options,\n      onLoad = _ref3.onLoad,\n      renderError = _ref3.renderError;\n\n  var _useTwitterWidget2 = useTwitterWidget(\"createHashtagButton\", hashtag, options, onLoad),\n      ref = _useTwitterWidget2.ref,\n      error = _useTwitterWidget2.error;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, error && renderError && renderError(error));\n};\nexport var Mention = function Mention(_ref4) {\n  var username = _ref4.username,\n      options = _ref4.options,\n      onLoad = _ref4.onLoad,\n      renderError = _ref4.renderError;\n\n  var _useTwitterWidget3 = useTwitterWidget(\"createMentionButton\", username, options, onLoad),\n      ref = _useTwitterWidget3.ref,\n      error = _useTwitterWidget3.error;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, error && renderError && renderError(error));\n};\nexport var Share = function Share(_ref5) {\n  var url = _ref5.url,\n      options = _ref5.options,\n      onLoad = _ref5.onLoad,\n      renderError = _ref5.renderError;\n\n  var _useTwitterWidget4 = useTwitterWidget(\"createShareButton\", url, options, onLoad),\n      ref = _useTwitterWidget4.ref,\n      error = _useTwitterWidget4.error;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, error && renderError && renderError(error));\n};\nexport var Timeline = function Timeline(_ref6) {\n  var dataSource = _ref6.dataSource,\n      options = _ref6.options,\n      onLoad = _ref6.onLoad,\n      renderError = _ref6.renderError;\n\n  var _useTwitterWidget5 = useTwitterWidget(\"createTimeline\", dataSource, options, onLoad),\n      ref = _useTwitterWidget5.ref,\n      error = _useTwitterWidget5.error;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, error && renderError && renderError(error));\n};\nexport var Tweet = function Tweet(_ref7) {\n  var tweetId = _ref7.tweetId,\n      options = _ref7.options,\n      onLoad = _ref7.onLoad,\n      renderError = _ref7.renderError;\n\n  var _useTwitterWidget6 = useTwitterWidget(\"createTweet\", tweetId, options, onLoad),\n      ref = _useTwitterWidget6.ref,\n      error = _useTwitterWidget6.error;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, error && renderError && renderError(error));\n};"],"sourceRoot":""}
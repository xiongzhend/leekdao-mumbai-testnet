{"version":3,"sources":["views/Billboard/Map/BillboardForm.tsx","components/Transaction/LoadingContent.tsx","views/Billboard/Modal/ConfirmationPendeingContent.tsx","components/Transaction/TransactionMessage.tsx","views/Billboard/Modal/BillboardBidModal.tsx","views/Billboard/Hero.tsx","hooks/useAllowance.ts","views/Billboard/Map/Pins.tsx","views/Billboard/Map/BillboardDetails.tsx","views/Billboard/api/index.ts","views/Billboard/Map/MapBox.tsx","views/Billboard/Billboard.tsx","utils/translateTextHelpers.ts","hooks/useI18n.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/formatBalance.ts","utils/chainExplorer.ts","components/UnlockButton.tsx","config/constants/ifo.ts","config/constants/airdrop.ts","config/constants/index.ts","utils/callHelpers.ts","utils/erc20.ts","utils/truncateWalletAddress.ts","views/Billboard/store/store.tsx","views/Billboard/store/reducer.tsx","config/constants/location.ts","hooks/useTokenBalance.ts","config/index.ts","hooks/useApprove.ts","components/Transaction/Column.tsx"],"names":["ipfs","ipfsClient","host","port","protocol","FormLayout","styled","div","Textarea","textarea","backgroundColor","textColor","BillboardForm","info","setPopupInfo","baseInfo","tokenBalance","allowance","id","city","isBid","bidLevel","isDark","useTheme","account","useWallet","useState","description","setDescription","twitter","setTwitter","buffer","setBuffer","file","setFile","validImage","setValidImage","validDescription","setValidDescription","validTwitter","setValidTwitter","approval","setApproval","tokenAddress","getCakeAddress","minimumTokenAmount","basePrice","bidTokenAmount","getBalanceNumber","BigNumber","tokenContract","useERC20","billboardContract","useBillboardContract","billboardAddress","getBillboardAddress","formatedMinimumTokenAmount","onApprove","useBillboardApprove","needsApproval","toNumber","formatedTokenBalance","isQualified","isTokenEnough","useModal","title","onDismiss","onPresentConfirmationModal","onPresentImageUploadingModal","onPresentBillboardBidModal","handleApprove","useCallback","a","console","error","handleIsValid","e","field","fieldValue","validator","isLength","min","max","maxAllowedSize","Number","validateAllFields","onSubmit","event","preventDefault","add","response","hash","methods","bid","send","from","result","action","type","GET_BID_BILLBOARD_HASH","bidHash","transactionHash","store","dispatch","bidStore","HIDE_FORM","color","size","style","marginBottom","mb","placeholder","name","value","onChange","currentTarget","onBlur","required","accept","image","target","files","urlReader","window","FileReader","bufferReader","readAsDataURL","readAsArrayBuffer","onload","arg","onloadend","arrayBuffer","Uint8Array","Buffer","padding","src","alt","width","marginTop","alignItems","justifyContent","onClick","disabled","React","memo","rotate","keyframes","Spinner","img","ConfirmedIcon","ColumnCenter","CustomLightSpinner","LoadingContent","ConfirmationPendingContent","TransactionMessage","theme","useContext","ThemeContext","strokeWidth","colors","primary","gap","justify","href","getTranscationHash","process","BillboardBidModal","getState","mt","StyledHero","Box","Title","Heading","attrs","as","DesktopImage","Image","mediaQueries","lg","Hero","Container","pr","height","useBillboardAllowance","spenderAddress","setAllowance","fastRefresh","useRefresh","useEffect","call","res","fetch","StyledSvg","svg","StyledImg","zoom","Pins","props","data","map","longitude","latitude","ipfsHash","viewBox","d","BillboardLayout","BaseLayout","sm","BillboardDetails","desc","owner","formatedBasePrice","bold","marginRight","getChainExplorerUrl","truncateWalletAddress","SHOW_FORM","UnlockButton","useGetBaseInfo","setBaseInfo","contract","slowRefresh","mounted","Promise","all","minimumTokenAmountToCreate","fetchData","useGetBillboardDetails","cities","billboardStore","getAllBillBoards","billboards","newBillboards","forEach","billboard","init","billboardsDetails","billboardData","push","GET_BILLBOARD_DETAILS","geolocateStyle","top","left","fullscreenControlStyle","navStyle","scaleControlStyle","bottom","Map","bearing","pitch","viewport","setViewport","show","popupInfo","useTokenBalance","mapbox","document","getElementsByClassName","closeButton","popupContent","setAttribute","comp","mapStyle","onViewportChange","mapboxApiAccessToken","tipSize","anchor","closeOnClick","onClose","Billboard","flexDirection","fontSize","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","find","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","length","urlProvider","NODE_URL","getNodeUrl","startsWith","Web3","providers","HttpProvider","timeout","WebsocketProvider","useWeb3","ethereum","refEth","useRef","web3","setweb3","current","useContract","abi","address","contractOptions","eth","Contract","setContract","useIfoContract","ifo","useAirdropContract","airdrop","getAirdropAddress","useVestingContract","vesting","erc20","useCake","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","config","poolsConfig","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","balance","decimals","displayBalance","dividedBy","pow","getFullDisplayBalance","toFixed","getMainTokenBalance","multipliedBy","chainId","ETHERSCAN_PREFIXES","getBlockInfo","block","TranslateString","connect","reset","useWalletModal","onPresentConnectModal","onPresentWrongNetworkModal","variant","ifos","80001","137","idoAddress","isActive","mainToken","subTitle","startTime","endTime","salesAmount","projectSiteUrl","tokenDecimals","totalAmount","farmsConfig","filter","farm","isCommunity","tokenSymbol","approve","lpContract","masterChefContract","options","ethers","constants","MaxUint256","stake","pid","amount","deposit","times","toString","on","tx","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","getContract","provider","getAllowance","getTokenBalance","userAddress","balanceOf","startLength","endLength","substring","createStore","reducer","billboardReducer","bidReducer","defaultState","billboardState","formState","state","newState","JSON","parse","stringify","useTotalSupply","totalSupply","setTotalSupply","cakeContract","cakeABI","supply","fetchTotalSupply","useLockBalance","setBalance","vestingContract","vestingABI","getVestingAddress","remainingTokens","bal","fetchBalance","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","useApprove","useDispatch","fetchFarmUserDataAsync","Column","AutoColumn"],"mappings":"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","file":"static/js/12.454343b0.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport ipfsClient from 'ipfs-http-client'\nimport styled from 'styled-components';\nimport { City } from \"config/constants/types\"\nimport useTheme from 'hooks/useTheme'\nimport { getBalanceNumber } from \"utils/formatBalance\"\nimport { Text, Button, Input, Heading, Flex, useModal } from \"leek-uikit\"\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton';\nimport { useBillboardApprove } from 'hooks/useApprove';\nimport { getCakeAddress, getBillboardAddress } from 'utils/addressHelpers';\nimport { useERC20, useBillboardContract } from 'hooks/useContract';\nimport BigNumber from 'bignumber.js';\nimport validator from \"validator\"\nimport ConfirmationPendingContent from '../Modal/ConfirmationPendeingContent';\nimport BillboardBidModal from '../Modal/BillboardBidModal';\nimport { GET_BID_BILLBOARD_HASH, HIDE_FORM } from '../store/reducer';\nimport { store, bidStore } from \"../store/store\"\nimport { BillboardBaseInfo } from \"../api\"\n\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\ninterface Info extends City {\n    desc?: string\n    isBid?: boolean,\n    owner?: string,\n    ipfsHash?: string,\n    bidLevel?: number\n\n}\n\ninterface formPorps {\n    info: Info\n    setPopupInfo: (params) => void\n    baseInfo: BillboardBaseInfo\n    tokenBalance: BigNumber\n    allowance: BigNumber\n}\n\nconst FormLayout = styled.div`\n    padding:30px;\n\n    @media (max-width: 768px) {\n        padding:20px\n    }\n`\n\nconst Textarea = styled.textarea<{ backgroundColor: string, textColor: string }>`\n    background-color:${({ backgroundColor }) => backgroundColor};\n    border: 0;\n    border-radius: 16px;\n    box-shadow: inset 0px 2px 2px -1px rgb(74 74 104 / 10%);\n    color: ${({ textColor }) => textColor};\n    display: block;\n    font-size: 16px;\n    height: 100px;\n    outline: 0;\n    width: 100%;\n    padding:15px;\n`\n\nconst BillboardForm: React.FC<formPorps> = ({ info, setPopupInfo, baseInfo, tokenBalance, allowance }) => {\n    const { id, city, isBid, bidLevel } = info;\n    const { isDark } = useTheme()\n    const { account } = useWallet()\n    const [description, setDescription] = useState(\"\")\n    const [twitter, setTwitter] = useState(\"\")\n    const [buffer, setBuffer] = useState(null);\n    const [file, setFile] = useState(null);\n    const [validImage, setValidImage] = useState(true)\n    const [validDescription, setValidDescription] = useState(true)\n    const [validTwitter, setValidTwitter] = useState(true);\n    const [approval, setApproval] = useState(true)\n    const tokenAddress = getCakeAddress()\n    const minimumTokenAmount = baseInfo && baseInfo.minimumTokenAmount\n    const basePrice = baseInfo && baseInfo.basePrice\n    const formatedBasePrice = getBalanceNumber(new BigNumber(basePrice));\n    const bidTokenAmount = formatedBasePrice * bidLevel\n    const tokenContract = useERC20(tokenAddress);\n    const billboardContract = useBillboardContract()\n    const billboardAddress = getBillboardAddress()\n    const formatedMinimumTokenAmount = getBalanceNumber(new BigNumber(minimumTokenAmount))\n    const { onApprove } = useBillboardApprove(tokenContract, billboardAddress)\n    const needsApproval = allowance.toNumber() <= 0\n    const formatedTokenBalance = getBalanceNumber(tokenBalance)\n    const isQualified = isBid || formatedTokenBalance >= formatedMinimumTokenAmount\n    const isTokenEnough = !isBid || formatedTokenBalance >= bidTokenAmount\n    const [onPresentConfirmationModal] = useModal(<ConfirmationPendingContent title=\"Waiting for Confirmation\" onDismiss={() => { return null }} />)\n    const [onPresentImageUploadingModal] = useModal(<ConfirmationPendingContent title=\"Uploading to IPFS\" onDismiss={() => { return null }} />)\n    const [onPresentBillboardBidModal] = useModal(<BillboardBidModal onDismiss={() => { return null }} />)\n\n    const handleApprove = useCallback(async () => {\n        try {\n            setApproval(true)\n            const txHash = await onApprove()\n            if (!txHash) {\n                setApproval(false)\n            }\n        } catch (e) {\n            console.error(e)\n        }\n    }, [onApprove, setApproval])\n\n    const validateAllFields = (field: string, fieldValue: string) => {\n        if (field === 'description') {\n            setDescription(fieldValue)\n            if (validator.isLength(fieldValue, { min: 1, max: 50 })) {\n                setValidDescription(true)\n            } else {\n                setValidDescription(false)\n            }\n        }\n\n        if (field === 'twitter') {\n            setTwitter(fieldValue)\n            if (validator.isLength(fieldValue, { min: 1, max: 50 })) {\n                setValidTwitter(true)\n            } else {\n                setValidTwitter(false)\n            }\n        }\n\n        if (field === 'image') {\n            const maxAllowedSize = 5 * 1024 * 1024;\n            if (Number(fieldValue) > maxAllowedSize) {\n                setValidImage(false)\n            } else {\n                setValidImage(true)\n            }\n        }\n    }\n\n    const handleIsValid = (e, field: string) => {\n        validateAllFields(field, e);\n    }\n\n    const captureFile = (event) => {\n        event.preventDefault()\n        const image = event.target.files[0]\n        if (image) {\n            handleIsValid(image.size, 'image')\n        }\n        const urlReader = new window.FileReader()\n        const bufferReader = new window.FileReader()\n        urlReader.readAsDataURL(image)\n        bufferReader.readAsArrayBuffer(image)\n\n        urlReader.onload = (arg) => {\n            setFile(arg.target.result)\n        }\n\n        bufferReader.onloadend = () => {\n            const arrayBuffer = new Uint8Array(bufferReader.result as ArrayBuffer)\n            setBuffer(Buffer.from(arrayBuffer));\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault()\n        onPresentImageUploadingModal()\n        const response = await ipfs.add(buffer);\n        if (response) {\n            const { hash } = response[0];\n            onPresentConfirmationModal();\n            const result = await billboardContract.methods.bid(id, city, hash, description, twitter).send({ from: account })\n            if (result) {\n                const action = {\n                    type: GET_BID_BILLBOARD_HASH,\n                    bidHash: result.transactionHash,\n                }\n                store.dispatch(action)\n                onPresentBillboardBidModal()\n            }\n            setPopupInfo(null);\n            bidStore.dispatch({ type: HIDE_FORM })\n\n        }\n    }\n\n    return (\n        <FormLayout>\n            <Heading color=\"secondary\" size=\"lg\">Bill Board Bid Form</Heading>\n            <Text>City: {info.city}</Text>\n            <form onSubmit={onSubmit}>\n                <div style={{ marginBottom: '10px' }}>\n                    <Text mb=\"5px\">Twitter Username: (without @)</Text>\n                    <Input\n                        placeholder=\"Twitter Username...\"\n                        name=\"twitter\"\n                        value={twitter}\n                        onChange={(e) => handleIsValid(e.currentTarget.value, \"twitter\")}\n                        onBlur={() => setValidTwitter(true)}\n                    />\n                </div>\n\n                <div style={{ marginBottom: '10px' }}>\n                    <Text mb=\"5px\">* Descriptions:</Text>\n                    <Textarea\n                        placeholder=\"Descriptions...\"\n                        name=\"description\"\n                        value={description}\n                        onChange={(e) => handleIsValid(e.currentTarget.value, \"description\")}\n                        required\n                        backgroundColor={!isDark ? \"#eeeaf4\" : \"#483f5a\"}\n                        textColor={!isDark ? \"#452A7A\" : \"#EAE2FC\"}\n                    />\n                </div>\n\n                <div>\n                    <Text mb=\"5px\">* Upload Images:</Text>\n                    <Input\n                        type=\"file\"\n                        name=\"img\"\n                        accept=\"image/*\"\n                        onChange={captureFile}\n                        required\n                        style={{ padding: \"8px\" }}\n                    />\n\n                    {file && <img src={file} alt=\"board\" width=\"200px\" style={{ marginTop: \"10px\" }} />}<br />\n                </div>\n\n                {account && !isQualified && <Text color=\"failure\" mb=\"10px\">Sorry! First Time Creation Required: {formatedMinimumTokenAmount} LEEK</Text>}\n\n                {account && !isTokenEnough && <Text color=\"failure\" mb=\"10px\">Sorry! Minimum LEEK Required: {bidTokenAmount} LEEK</Text>}\n\n                {account && !validDescription && <Text color=\"failure\" mb=\"10px\">Sorry! Text Size is 1 - 50</Text>}\n\n                {account && !validImage && <Text color=\"failure\" mb=\"10px\">Sorry! Maximum Image Size is: 5MB</Text>}\n\n                {account && !validTwitter && <Text color=\"failure\" mb=\"10px\">Sorry! Please enter a valid twitter name</Text>}\n\n                {account ? <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Button onClick={handleApprove} disabled={!isQualified || !needsApproval || !approval || !validImage || !validDescription || !isTokenEnough}>Approve</Button>\n                    <Button type=\"submit\" disabled={!isQualified || needsApproval || !validImage || !validDescription || !isTokenEnough}>Submit</Button>\n                </Flex> : <UnlockButton />}\n\n\n            </form>\n        </FormLayout>\n\n    )\n}\n\nexport default React.memo(BillboardForm);","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { ColumnCenter } from \"./Column\"\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nconst CustomLightSpinner = styled(Spinner) <{ size: string }>`\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n`\n\nconst LoadingContent = () => {\n    return (\n        <ConfirmedIcon>\n            <CustomLightSpinner src=\"./images/blue-loader.svg\" alt=\"loader\" size=\"90px\" />\n        </ConfirmedIcon>\n    )\n}\n\nexport default LoadingContent","import React from 'react'\nimport { Modal } from 'leek-uikit'\nimport LoadingContent from 'components/Transaction/LoadingContent'\n\ntype ConfirmationPendingContentProps = {\n    title: string\n    onDismiss: () => void\n}\n\nconst ConfirmationPendingContent = ({ title, onDismiss }: ConfirmationPendingContentProps) => {\n    return (\n        <Modal title={title} onDismiss={onDismiss}>\n            <LoadingContent />\n        </Modal>\n    )\n}\n\nexport default ConfirmationPendingContent","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { LinkExternal } from 'leek-uikit'\nimport { ArrowUpCircle } from 'react-feather'\nimport { getTranscationHash } from 'utils/chainExplorer'\nimport { AutoColumn, ColumnCenter } from './Column'\n\ntype TransactionMessageProps = {\n    transactionHash?: string\n}\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nconst TransactionMessage: React.FC<TransactionMessageProps> = ({ transactionHash }) => {\n    const theme = useContext(ThemeContext)\n\n    return (\n        <div>\n            <ConfirmedIcon>\n                <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\n            </ConfirmedIcon>\n            <AutoColumn gap=\"8px\" justify=\"center\">\n                <LinkExternal href={getTranscationHash(chainId, transactionHash)}>View on PolygonScan</LinkExternal>\n            </AutoColumn>\n        </div>\n\n    )\n}\n\nexport default TransactionMessage","import React from 'react'\nimport { Button, Modal } from 'leek-uikit'\nimport { AutoColumn } from 'components/Transaction/Column'\nimport TransactionMessage from 'components/Transaction/TransactionMessage'\nimport { store } from \"../store/store\"\n\ntype TransactionSubmittedContentProps = {\n    onDismiss: () => void\n}\n\nconst BillboardBidModal = ({ onDismiss }: TransactionSubmittedContentProps) => {\n    const { bidHash } = store.getState()\n\n    return (\n        <Modal title=\"Transaction Submitted\" onDismiss={onDismiss}>\n            <TransactionMessage transactionHash={bidHash} />\n            <AutoColumn gap=\"8px\" justify=\"center\">\n                <Button onClick={onDismiss} mt=\"20px\">\n                    Close\n                </Button>\n            </AutoColumn>\n        </Modal>\n    )\n}\n\nexport default BillboardBidModal","import React from 'react'\nimport { Box, Flex, Heading, Image } from 'leek-uikit'\nimport styled from 'styled-components'\nimport Container from 'components/layout/Container'\n\nconst StyledHero = styled(Box)`\n background-image: linear-gradient(180deg, #c0cefa 20%, #c0fae3 100%);\n  padding-bottom: 32px;\n  padding-top: 32px;\n`\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n  margin-top:20px;\n`\n\nconst DesktopImage = styled(Image)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst Hero = () => {\n    return (\n        <StyledHero>\n            <Container>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Box pr=\"32px\">\n                        <Title>\n                            World Map Billboard\n                        </Title>\n                        <Heading mb=\"16px\">\n                            Advertise your products using LEEK Token\n                        </Heading>\n                    </Box>\n                    <DesktopImage src=\"./images/games/billboard/billboard.png\" width={200} height={200} />\n                </Flex>\n            </Container>\n        </StyledHero >\n    )\n}\n\nexport default Hero","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n\n\n// Retrieve Billboard Allowance\nexport const useBillboardAllowance = (tokenContract: Contract, spenderAddress: string) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, fastRefresh])\n\n  return allowance\n}\n","import React from 'react';\nimport { Marker } from 'react-map-gl';\nimport styled from 'styled-components';\n\nconst ICON = `M12,2 C8.14,2 5,5.14 5,9 C5,13.17 9.42,18.92 11.24,21.11 C11.64,21.59 12.37,21.59 12.77,21.11 C14.58,18.92 19,13.17 19,9 C19,5.14 15.86,2 12,2 Z M15,10 L13,10 L13,12 C13,12.55 12.55,13 12,13 C11.45,13 11,12.55 11,12 L11,10 L9,10 C8.45,10 8,9.55 8,9 C8,8.45 8.45,8 9,8 L11,8 L11,6 C11,5.45 11.45,5 12,5 C12.55,5 13,5.45 13,6 L13,8 L15,8 C15.55,8 16,8.45 16,9 C16,9.55 15.55,10 15,10 Z`;\n\nconst SIZE = 35;\n\nconst StyledSvg = styled.svg`\n    cursor: pointer;\n    fill: #AB3395;\n    stroke: none;\n    transform: translate(-20px, -32px);\n`\n\nconst StyledImg = styled.img<{ zoom: number }>`\n    min-width:64px;\n    min-height:48px;\n    max-width:${({ zoom }) => zoom * 85}px;\n    max-height:${({ zoom }) => zoom * 64}px;\n    width: ${({ zoom }) => zoom * 10}%;\n    height: ${({ zoom }) => zoom * 10}%;\n    borderRadius:50%;\n    transform: translate(-20px, -32px);\n    cursor: pointer;\n`\n\nfunction Pins(props) {\n    const { data, onClick, zoom } = props;\n\n    return (\n        <div>\n            {\n                data && data.map((city) => (\n                    <Marker key={city.id} longitude={city.longitude} latitude={city.latitude} >\n                        {\n                            city.ipfsHash ?\n                                <StyledImg zoom={zoom} src={`https://ipfs.infura.io/ipfs/${city.ipfsHash}`} alt={city.id} onClick={() => onClick(city)} /> :\n                                <StyledSvg\n                                    height={SIZE}\n                                    viewBox=\"0 0 24 24\"\n                                    onClick={() => onClick(city)}\n                                >\n                                    <path d={ICON} />\n                                </StyledSvg>\n                        }\n                    </Marker >\n                ))\n            }\n        </div >\n    )\n}\n\nexport default React.memo(Pins);","import React from \"react\"\nimport styled from \"styled-components\"\nimport BigNumber from \"bignumber.js\"\nimport { getBalanceNumber } from \"utils/formatBalance\"\nimport { Text, Button, Heading, Flex, Box, BaseLayout, LinkExternal, Link } from \"leek-uikit\"\nimport truncateWalletAddress from \"utils/truncateWalletAddress\"\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from \"components/UnlockButton\"\nimport { getChainExplorerUrl } from \"utils/chainExplorer\"\nimport { bidStore } from \"../store/store\"\nimport { SHOW_FORM } from \"../store/reducer\"\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nconst BillboardLayout = styled(BaseLayout)`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding:30px;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 0.8fr 1fr;\n  }\n`\n\nconst BillboardDetails = (props) => {\n    const { info, baseInfo } = props;\n    const { ipfsHash, desc, bidLevel, owner, twitter } = info;\n    const basePrice = baseInfo && baseInfo.basePrice\n    const formatedBasePrice = getBalanceNumber(new BigNumber(basePrice));\n    const { account } = useWallet()\n\n    const bid = () => {\n        bidStore.dispatch({ type: SHOW_FORM })\n    }\n\n    return (\n        <BillboardLayout>\n            <img src={`https://ipfs.infura.io/ipfs/${ipfsHash}`} alt=\"city\" width={300} />\n            <Box>\n                <div style={{ marginBottom: \"10px\" }}>\n                    <Heading size=\"lg\" color=\"secondary\">{desc}</Heading>\n                </div>\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Owner:</Text>\n                    <LinkExternal href={getChainExplorerUrl(chainId, owner)}>{truncateWalletAddress(owner)}</LinkExternal>\n                </Flex>\n\n                {\n                    twitter && <Flex alignItems=\"center\" justifyContent=\"start\">\n                        <Text bold marginRight=\"10px\">Twitter:</Text>\n                        <Link href={`https://twitter.com/${twitter}`} target=\"_blank\">@{twitter}</Link>\n                    </Flex>\n                }\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Bid Level:</Text>\n                    <Text>{bidLevel}</Text>\n                </Flex>\n\n                <Flex alignItems=\"center\" justifyContent=\"start\">\n                    <Text bold marginRight=\"10px\">Bid Price:</Text>\n                    <Text>{formatedBasePrice * bidLevel} LEEK</Text>\n                </Flex>\n\n                {\n                    account ? <Button size=\"sm\" mt=\"10px\" onClick={bid}>Bid Here</Button> : <UnlockButton size=\"sm\" mt=\"10px\" />\n                }\n\n            </Box>\n        </BillboardLayout >\n    )\n}\n\nexport default React.memo(BillboardDetails)","import { useEffect, useState } from \"react\"\nimport { useBillboardContract } from \"hooks/useContract\"\nimport useRefresh from \"hooks/useRefresh\"\nimport { billboardStore } from '../store/store';\nimport { GET_BILLBOARD_DETAILS } from '../store/reducer'\n\nexport interface BillboardBaseInfo {\n    basePrice: number\n    minimumTokenAmount: number\n}\n\nexport const useGetBaseInfo = () => {\n    const [baseInfo, setBaseInfo] = useState<BillboardBaseInfo>()\n    const contract = useBillboardContract()\n    const { slowRefresh } = useRefresh()\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchData = async () => {\n            try {\n                const [basePrice, minimumTokenAmount] = await Promise.all([\n                    contract.methods.basePrice().call(),\n                    contract.methods.minimumTokenAmountToCreate().call(),\n                ])\n\n                if (mounted) {\n                    setBaseInfo({\n                        basePrice,\n                        minimumTokenAmount\n                    })\n                }\n            } catch (err) {\n                console.error(\"Unable to fetch base price\", err.response)\n            }\n        }\n        fetchData();\n        return () => { mounted = false }\n    }, [slowRefresh])// eslint-disable-line react-hooks/exhaustive-deps\n    return baseInfo\n}\n\nexport const useGetBillboardDetails = () => {\n    const contract = useBillboardContract()\n    const { cities } = billboardStore.getState()\n    const { slowRefresh } = useRefresh()\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchData = async () => {\n            try {\n                const billboards = await contract.methods.getAllBillBoards().call();\n                const newBillboards = {}\n\n                billboards.forEach(billboard => {\n                    const { id, desc, owner, ipfsHash, bidLevel, twitter } = billboard;\n                    const isBid = billboard.init;\n\n                    newBillboards[id] = {\n                        id,\n                        desc,\n                        twitter,\n                        isBid,\n                        owner,\n                        ipfsHash,\n                        bidLevel\n                    }\n                })\n\n                const billboardsDetails = []\n\n                cities.forEach(city => {\n                    const { id } = city\n                    const billboardData = newBillboards[id];\n\n                    if (billboardData) {\n                        billboardsDetails.push({\n                            ...city,\n                            ...billboardData\n                        })\n                    } else {\n                        billboardsDetails.push(city)\n                    }\n                })\n\n                if (mounted) {\n                    const action = {\n                        type: GET_BILLBOARD_DETAILS,\n                        cities: billboardsDetails\n                    }\n\n                    billboardStore.dispatch(action)\n                }\n\n            } catch (err) {\n                console.error(\"Unable to fetch billboard details\", err.response)\n            }\n        }\n        fetchData();\n        return () => {\n            mounted = false\n        }\n    }, [cities, slowRefresh])// eslint-disable-line react-hooks/exhaustive-deps\n}","import React, { useState, useEffect } from 'react';\nimport MapGL, {\n    Popup,\n    NavigationControl,\n    FullscreenControl,\n    ScaleControl,\n    GeolocateControl\n} from 'react-map-gl';\nimport useTheme from 'hooks/useTheme'\nimport BigNumber from 'bignumber.js';\nimport { getCakeAddress, getBillboardAddress } from 'utils/addressHelpers';\nimport { useERC20 } from 'hooks/useContract';\nimport { useBillboardAllowance } from 'hooks/useAllowance';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport Pins from './Pins';\nimport BillboardForm from './BillboardForm';\nimport BillboardDetails from './BillboardDetails';\nimport { useGetBillboardDetails, useGetBaseInfo } from \"../api/index\"\nimport { bidStore, billboardStore } from \"../store/store\"\nimport { HIDE_FORM } from '../store/reducer';\n\n\nconst TOKEN = process.env.REACT_APP_MAP_TOKEN\n\nconst geolocateStyle = {\n    top: 0,\n    left: 0,\n    padding: '10px',\n};\n\nconst fullscreenControlStyle = {\n    top: 36,\n    left: 0,\n    padding: '10px',\n};\n\nconst navStyle = {\n    top: 72,\n    left: 0,\n    padding: '10px'\n};\n\nconst scaleControlStyle = {\n    bottom: 36,\n    left: 0,\n    padding: '10px'\n};\n\nconst Map = () => {\n    const [viewport, setViewport] = useState({\n        latitude: 51.29,\n        longitude: 0,\n        zoom: 1.5,\n        bearing: 0,\n        pitch: 0\n    });\n    const { isDark } = useTheme()\n    const { show } = bidStore.getState()\n    useGetBillboardDetails();\n    const { cities } = billboardStore.getState();\n    const baseInfo = useGetBaseInfo()\n    const tokenAddress = getCakeAddress()\n    const tokenContract = useERC20(tokenAddress);\n    const billboardAddress = getBillboardAddress()\n    const allowance = new BigNumber(useBillboardAllowance(tokenContract, billboardAddress) || 0)\n    const [popupInfo, setPopupInfo] = useState(null);\n    const tokenBalance = useTokenBalance(tokenAddress)\n\n    useEffect(() => {\n        const mapbox = document.getElementsByClassName('mapboxgl-map')[0]\n        const closeButton = document.getElementsByClassName('mapboxgl-popup-close-button')[0]\n        const popupContent = document.getElementsByClassName(\"mapboxgl-popup-content\")[0]\n\n        if (mapbox) {\n            if (popupInfo) {\n                mapbox.setAttribute(\"style\", \"position: absolute; width: 100%; height: 100%; overflow: hidden; visibility: inherit; opacity:50%\")\n\n                if (isDark) {\n                    popupContent.setAttribute('style', \"background:#18151f\")\n                    closeButton.setAttribute('style', \"font-size:50px; width:50px;color:#c9c4d4\")\n                } else {\n                    popupContent.setAttribute('style', \"background:#fff\")\n                    closeButton.setAttribute('style', \"font-size:50px; width:50px;color:#483f5a\")\n                }\n            } else {\n                mapbox.setAttribute('style', 'position: absolute; width: 100%; height: 100%; overflow: hidden; visibility: inherit;')\n\n            }\n        }\n    }, [popupInfo, isDark])\n\n    let comp = <BillboardForm info={popupInfo} setPopupInfo={setPopupInfo} baseInfo={baseInfo} tokenBalance={tokenBalance} allowance={allowance} />;\n\n    if (popupInfo && popupInfo.ipfsHash) {\n        if (show) {\n            comp = <BillboardForm info={popupInfo} setPopupInfo={setPopupInfo} baseInfo={baseInfo} tokenBalance={tokenBalance} allowance={allowance} />\n        } else {\n            comp = <BillboardDetails info={popupInfo} baseInfo={baseInfo} />\n        }\n    }\n\n    return (\n        <>\n            <MapGL\n                {...viewport}\n                width=\"100%\"\n                height=\"100vh\"\n                mapStyle={!isDark ? \"mapbox://styles/mapbox/streets-v10\" : 'mapbox://styles/mapbox/dark-v10'}\n                onViewportChange={setViewport}\n                mapboxApiAccessToken={TOKEN}\n            >\n\n                <Pins data={cities} onClick={setPopupInfo} zoom={viewport.zoom} />\n\n                {popupInfo && (\n                    <Popup\n                        tipSize={10}\n                        anchor=\"bottom\"\n                        longitude={popupInfo.longitude}\n                        latitude={popupInfo.latitude}\n                        closeOnClick={false}\n                        onClose={() => {\n                            setPopupInfo(null)\n                            bidStore.dispatch({ type: HIDE_FORM })\n                        }\n                        }\n                    >\n                        {comp}\n                    </Popup>\n                )}\n\n                <GeolocateControl style={geolocateStyle} />\n                <FullscreenControl style={fullscreenControlStyle} />\n                <NavigationControl style={navStyle} />\n                <ScaleControl style={scaleControlStyle} />\n            </MapGL>\n        </>\n    );\n}\n\nexport default React.memo(Map)","import React from \"react\";\nimport { Flex, Heading } from \"leek-uikit\";\nimport Hero from \"./Hero\";\nimport Map from \"./Map/MapBox\";\n\nconst Billboard = () => {\n    return (\n        <div>\n            <Hero />\n            <Flex width=\"100%\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                <Heading size=\"xl\" color=\"secondary\" mt=\"40px\" mb=\"40px\" fontSize=\"50px\">\n                    Participate our Billboard Right now!\n                </Heading>\n            </Flex>\n            <Map />\n        </div>\n    )\n}\n\nexport default Billboard\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getNodeUrl from 'utils/getRpcUrl'\n\nconst NODE_URL = getNodeUrl()\n\nlet urlProvider: any\nif (NODE_URL.startsWith('https://')) {\n  urlProvider = new Web3.providers.HttpProvider(NODE_URL, { timeout: 10000 } as HttpProviderOptions)\n} else if (NODE_URL.startsWith('wss://')) {\n  urlProvider = new Web3.providers.WebsocketProvider(NODE_URL)\n}\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || urlProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || urlProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getAirdropAddress, getBillboardAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport vesting from 'config/abi/vesting.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport airdrop from 'config/abi/airdrop.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport billboard from \"config/abi/billboard.json\"\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useAirdropContract = () => {\n  const abi = (airdrop as unknown) as AbiItem\n  return useContract(abi, getAirdropAddress())\n}\n\nexport const useBillboardContract = () => {\n  const abi = (billboard as unknown) as AbiItem\n  return useContract(abi, getBillboardAddress())\n}\n\nexport const useVestingContract = (address: string) => {\n  const vestingAbi = (vesting as unknown) as AbiItem\n  return useContract(vestingAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const getMainTokenBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.multipliedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import { ETHERSCAN_PREFIXES } from 'config'\n\nexport const getChainExplorerUrl = (chainId: string, address: string) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/address/${address}`\n}\n\nexport const getTranscationHash = (chainId: string, hash: string) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/tx/${hash}`\n}\n\nexport const getBlockInfo = (chainId: string, block: number) => {\n    return `${ETHERSCAN_PREFIXES[chainId]}/block/${block}`\n}","import React from 'react'\nimport { Button, useWalletModal } from 'leek-uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset, error } = useWallet()\n  const { onPresentConnectModal, onPresentWrongNetworkModal } = useWalletModal(connect, reset, error)\n  let comp\n  if (error) {\n    comp = (\n      <Button onClick={onPresentWrongNetworkModal} {...props} variant=\"danger\">\n        Wrong Network\n      </Button>\n    )\n  } else {\n    comp = (\n      <Button onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    )\n  }\n\n  return <div>{comp}</div>\n}\n\nexport default UnlockButton\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'leek',\n    tokenAddress: {\n      80001: '0xc657EFDb41eaBA15Cea84d34a2A60b18686FA929',\n      137: '0x67A32987a8EAA0644702C362B53B8EeBd126C20b',\n    },\n    idoAddress: {\n      80001: '0x8AaE8746bCFaAC6AC2927C1C9099943B4de5d7f3',\n      137: '0x0E9B41A5D64de6B4BF6e086417E813Df21707748',\n    },\n    isActive: false,\n    name: 'LEEK',\n    mainToken: 'MATIC',\n    subTitle: 'A community driven crypto and knowledge sharing DAO powered by $LEEK Social Token',\n    startTime: 1625625327,\n    endTime: 1626625327,\n    salesAmount: 500000,\n    projectSiteUrl: '#',\n    tokenDecimals: 18,\n  },\n]\n\nexport default ifos\n","import { Airdrop } from './types'\n\nconst airdrop: Airdrop =\n{\n    id: 'leek',\n    tokenAddress: {\n        80001: '0xc657EFDb41eaBA15Cea84d34a2A60b18686FA929',\n        137: '0x67A32987a8EAA0644702C362B53B8EeBd126C20b',\n    },\n    isActive: true,\n    name: 'LEEK',\n    description: 'A community driven crypto and knowledge sharing DAO powered by $LEEK Social Token',\n    tokenDecimals: 18,\n    projectSiteUrl: \"https://leekdao.xyz\",\n    totalAmount: 10000\n}\n\nexport default airdrop","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\nexport { default as airdropConfig } from \"./airdrop\"\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n    return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress","import { createStore } from 'redux'\nimport { reducer, billboardReducer, bidReducer } from './reducer'\n\nexport const store = createStore(reducer)\nexport const billboardStore = createStore(billboardReducer)\nexport const bidStore = createStore(bidReducer)\n\n","import cities from \"config/constants/location\"\n\nconst defaultState = {\n    bidHash: '',\n}\n\nconst billboardState = {\n    cities\n}\n\nconst formState = {\n    show: false\n}\n\nexport const GET_BID_BILLBOARD_HASH = 'GET_BID_BILLBOARD_HASH'\nexport const GET_BILLBOARD_DETAILS = 'GET_BILLBOARD_DETAILS'\nexport const SHOW_FORM = 'SHOW_FORM'\nexport const HIDE_FORM = 'HIDE_FORM'\n\nexport const reducer = (state = defaultState, action) => {\n    if (action.type === GET_BID_BILLBOARD_HASH) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.bidHash = action.bidHash\n        return newState\n    }\n    return state\n}\n\nexport const billboardReducer = (state = billboardState, action) => {\n    if (action.type === GET_BILLBOARD_DETAILS) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.cities = action.cities\n        return newState\n    }\n    return state\n}\n\nexport const bidReducer = (state = formState, action) => {\n    if (action.type === SHOW_FORM) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.show = true\n        return newState\n    }\n\n    if (action.type === HIDE_FORM) {\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.show = false\n        return newState\n    }\n\n    return state\n}","import { City } from \"./types\"\n\nconst cities: City[] = [\n    {\n        \"id\": 1,\n        \"city\": \"Tokyo\",\n        \"latitude\": 35.685,\n        \"longitude\": 139.7514\n    },\n    {\n        \"id\": 2,\n        \"city\": \"New York\",\n        \"latitude\": 40.6943,\n        \"longitude\": -73.9249\n    },\n    {\n        \"id\": 3,\n        \"city\": \"Mexico City\",\n        \"latitude\": 19.4424,\n        \"longitude\": -99.131\n    },\n    {\n        \"id\": 4,\n        \"city\": \"Mumbai\",\n        \"latitude\": 19.017,\n        \"longitude\": 72.857\n    },\n    {\n        \"id\": 5,\n        \"city\": \"Sao Paulo\",\n        \"latitude\": -23.5587,\n        \"longitude\": -46.625\n    },\n    {\n        \"id\": 6,\n        \"city\": \"Delhi\",\n        \"latitude\": 28.67,\n        \"longitude\": 77.23\n    },\n    {\n        \"id\": 7,\n        \"city\": \"Shanghai\",\n        \"latitude\": 31.2165,\n        \"longitude\": 121.4365\n    },\n    {\n        \"id\": 8,\n        \"city\": \"Kolkata\",\n        \"latitude\": 22.495,\n        \"longitude\": 88.3247\n    },\n    {\n        \"id\": 9,\n        \"city\": \"Los Angeles\",\n        \"latitude\": 34.1139,\n        \"longitude\": -118.4068\n    },\n    {\n        \"id\": 10,\n        \"city\": \"Buenos Aires\",\n        \"latitude\": -34.6025,\n        \"longitude\": -58.3975\n    },\n    {\n        \"id\": 11,\n        \"city\": \"Cairo\",\n        \"latitude\": 30.05,\n        \"longitude\": 31.25\n    },\n    {\n        \"id\": 12,\n        \"city\": \"Rio de Janeiro\",\n        \"latitude\": -22.925,\n        \"longitude\": -43.225\n    },\n    {\n        \"id\": 13,\n        \"city\": \"Osaka\",\n        \"latitude\": 34.75,\n        \"longitude\": 135.4601\n    },\n    {\n        \"id\": 14,\n        \"city\": \"Beijing\",\n        \"latitude\": 39.9289,\n        \"longitude\": 116.3883\n    },\n    {\n        \"id\": 15,\n        \"city\": \"Manila\",\n        \"latitude\": 14.6042,\n        \"longitude\": 120.9822\n    },\n    {\n        \"id\": 16,\n        \"city\": \"Moscow\",\n        \"latitude\": 55.7522,\n        \"longitude\": 37.6155\n    },\n    {\n        \"id\": 17,\n        \"city\": \"Istanbul\",\n        \"latitude\": 41.105,\n        \"longitude\": 29.01\n    },\n    {\n        \"id\": 18,\n        \"city\": \"Paris\",\n        \"latitude\": 48.8667,\n        \"longitude\": 2.3333\n    },\n    {\n        \"id\": 19,\n        \"city\": \"Seoul\",\n        \"latitude\": 37.5663,\n        \"longitude\": 126.9997\n    },\n    {\n        \"id\": 20,\n        \"city\": \"Jakarta\",\n        \"latitude\": -6.1744,\n        \"longitude\": 106.8294\n    },\n    {\n        \"id\": 21,\n        \"city\": \"Guangzhou\",\n        \"latitude\": 23.145,\n        \"longitude\": 113.325\n    },\n    {\n        \"id\": 22,\n        \"city\": \"Chicago\",\n        \"latitude\": 41.8373,\n        \"longitude\": -87.6861\n    },\n    {\n        \"id\": 23,\n        \"city\": \"London\",\n        \"latitude\": 51.5,\n        \"longitude\": -0.1167\n    },\n    {\n        \"id\": 24,\n        \"city\": \"Shenzhen\",\n        \"latitude\": 22.5524,\n        \"longitude\": 114.1221\n    },\n    {\n        \"id\": 25,\n        \"city\": \"Wuhan\",\n        \"latitude\": 30.58,\n        \"longitude\": 114.27\n    },\n    {\n        \"id\": 26,\n        \"city\": \"Hong Kong\",\n        \"latitude\": 22.305,\n        \"longitude\": 114.185\n    },\n    {\n        \"id\": 27,\n        \"city\": \"Bangalore\",\n        \"latitude\": 12.97,\n        \"longitude\": 77.56\n    },\n    {\n        \"id\": 28,\n        \"city\": \"Bangkok\",\n        \"latitude\": 13.75,\n        \"longitude\": 100.5166\n    },\n    {\n        \"id\": 29,\n        \"city\": \"Miami\",\n        \"latitude\": 25.784,\n        \"longitude\": -80.2102\n    },\n    {\n        \"id\": 30,\n        \"city\": \"Santiago\",\n        \"latitude\": -33.45,\n        \"longitude\": -70.667\n    },\n    {\n        \"id\": 31,\n        \"city\": \"Madrid\",\n        \"latitude\": 40.4,\n        \"longitude\": -3.6834\n    },\n    {\n        \"id\": 32,\n        \"city\": \"Houston\",\n        \"latitude\": 29.7868,\n        \"longitude\": -95.3905\n    },\n    {\n        \"id\": 33,\n        \"city\": \"Ho Chi Minh City\",\n        \"latitude\": 10.78,\n        \"longitude\": 106.695\n    },\n    {\n        \"id\": 34,\n        \"city\": \"Washington\",\n        \"latitude\": 38.8951,\n        \"longitude\": -77.0364\n    },\n    {\n        \"id\": 35,\n        \"city\": \"Toronto\",\n        \"latitude\": 43.7,\n        \"longitude\": -79.42\n    },\n    {\n        \"id\": 36,\n        \"city\": \"Singapore\",\n        \"latitude\": 1.293,\n        \"longitude\": 103.8558\n    },\n    {\n        \"id\": 37,\n        \"city\": \"Barcelona\",\n        \"latitude\": 41.3833,\n        \"longitude\": 2.1834\n    },\n    {\n        \"id\": 38,\n        \"city\": \"Sydney\",\n        \"latitude\": -33.92,\n        \"longitude\": 151.1852\n    },\n    {\n        \"id\": 39,\n        \"city\": \"Melbourne\",\n        \"latitude\": -37.82,\n        \"longitude\": 144.975\n    },\n    {\n        \"id\": 40,\n        \"city\": \"Chengdu\",\n        \"latitude\": 30.67,\n        \"longitude\": 104.07\n    },\n    {\n        \"id\": 41,\n        \"city\": \"Berlin\",\n        \"latitude\": 52.5218,\n        \"longitude\": 13.4015\n    },\n    {\n        \"id\": 42,\n        \"city\": \"Rome\",\n        \"latitude\": 41.896,\n        \"longitude\": 12.4833\n    },\n    {\n        \"id\": 43,\n        \"city\": \"Auckland\",\n        \"latitude\": -36.8481,\n        \"longitude\": 174.763\n    }\n]\n\nexport default cities","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport vestingABI from \"config/abi/vesting.json\"\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress, getVestingAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\n\nexport const useLockBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const vestingContract = getContract(vestingABI, getVestingAddress())\n      const bal = await vestingContract.methods.remainingTokens().call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [fastRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(15768000)\nexport const BSC_BLOCK_TIME = 2\n\nexport const CAKE_POOL_PID = 1\nexport const ETHERSCAN_PREFIXES = {\n  137: 'https://polygonscan.com',\n  80001: 'https://mumbai.polygonscan.com'\n}\n\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n\nexport const useBillboardApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return { onApprove }\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n    gap?: 'sm' | 'md' | 'lg' | string\n    justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column"],"sourceRoot":""}
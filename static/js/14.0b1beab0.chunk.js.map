{"version":3,"sources":["utils/formatBalance.ts","components/Footer/Footer.tsx","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/Column.tsx","views/Ifos/components/IfoCard/helpers.tsx","views/Ifos/store/reducer.tsx","views/Ifos/store/store.tsx","views/Ifos/components/IfoCard/TransactionSubmittedContent.tsx","views/Ifos/components/IfoCard/ConfirmationPendingContent.tsx","views/Ifos/components/IfoCard/ParticipateModal.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","getMainTokenBalance","multipliedBy","Footer","Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","theme","colors","primary","Blurb","Text","StyledHero","Hero","useI18n","Container","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledSpacer","props","spacing","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","symbol","onChange","onSelectMax","value","rate","token","TranslateString","tokenReceived","Number","Input","endAdornment","onClick","placeholder","toLocaleString","Column","ColumnCenter","AutoColumn","gap","justify","Section","ConfirmedIcon","invertedContrast","defaultState","hash","GET_TRANSACTION_HASH","store","createStore","state","action","type","newState","JSON","parse","stringify","TransactionSubmittedContent","onDismiss","useContext","ThemeContext","transaction","getState","title","strokeWidth","color","href","getTranscationHash","process","mt","rotate","keyframes","Spinner","img","CustomLightSpinner","ConfirmationPendingContent","ParticipateModal","tokenName","contract","mainToken","useState","setValue","wallet","useWallet","account","inputValue","buyTokens","a","onPresentPendingModal","methods","send","from","result","transactionHash","dispatch","onPresentSubmittedModal","useModal","isValueInValid","e","currentTarget","max","justifyContent","mr","disabled","StyledProgress","IfoCardProgress","progress","primaryStep","StyledIfoCardDetails","Item","secondary","Display","IfoCardDetails","launchTime","closingTime","salesAmount","projectSiteUrl","availableToken","tokenNumber","target","rel","ml","style","display","numeral","format","margin","StyledIfoCard","Card","Divider","borderColor","getStatus","isOpen","hasClosed","IfoCard","ifo","id","idoAddress","startTime","endTime","isLoading","status","openingTime","setState","useIfoContract","fastRefresh","useRefresh","Ribbon","variantColor","text","getRibbonComponent","useEffect","Promise","all","_openingTime","call","_closingTime","_rate","remainingTokens","fetchProgress","isActive","isFinished","moment","utc","onPresentParticipateModal","ribbon","fullWidth","UnlockButton","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","undefined","bold","fontSize","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo"],"mappings":"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","file":"static/js/14.0b1beab0.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const getMainTokenBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.multipliedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import React from 'react'\nimport { Text } from 'leek-uikit'\n\nconst Footer: React.FC = () => {\n    const chainId = process.env.REACT_APP_CHAIN_ID\n\n    return (\n        <div>\n            {\n                chainId === \"80001\" ? <Text color=\"failure\" fontSize=\"25px\">* Matic Testnet</Text> : \"\"\n            }\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'leek-uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Current IDO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IDOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from 'leek-uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #black;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>Initial Dex Offering</Title>\n        <Blurb>Invest in Innovative Projects</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from 'leek-uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: left;\n  margin-left: 20px;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: left;\n  margin-left: 20px;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`./images/ifos/${ifoId}.png`} alt={ifoId} width=\"50px\" height=\"50px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'leek-uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  rate: number\n  token: string\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ symbol, onChange, onSelectMax, value, rate, token }) => {\n  const TranslateString = useI18n()\n  const inputValue = Number(value)\n  const tokenReceived = inputValue * rate\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{`${tokenReceived.toLocaleString()} ${token} Received`}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Heading, IconButton, CloseIcon } from 'leek-uikit'\nimport { AutoColumn, ColumnCenter } from './Column'\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  overflow-y: auto;\n`\nexport const Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nexport const ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nexport const BottomSection = styled(Section)`\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\n/**\n * TODO: Remove this when modal system from the UI Kit is implemented\n */\nconst StyledContentHeader = styled.div`\n  align-items: center;\n  display: flex;\n\n  & > ${Heading} {\n    flex: 1;\n  }\n`\n\ntype ContentHeaderProps = {\n  children: ReactNode\n  onDismiss: () => void\n}\n\nexport const ContentHeader = ({ children, onDismiss }: ContentHeaderProps) => (\n  <StyledContentHeader>\n    <Heading>{children}</Heading>\n    <IconButton onClick={onDismiss} variant=\"text\">\n      <CloseIcon color=\"primary\" />\n    </IconButton>\n  </StyledContentHeader>\n)\n","const defaultState = {\n  hash: 'Michael',\n}\n\nexport const GET_TRANSACTION_HASH = 'GET_TRANSACTION_HASH'\n\nexport const reducer = (state = defaultState, action) => {\n  if (action.type === GET_TRANSACTION_HASH) {\n    const newState = JSON.parse(JSON.stringify(state))\n    newState.hash = action.hash\n    return newState\n  }\n  return state\n}\n","import { createStore } from 'redux'\nimport { reducer } from './reducer'\n\nconst store = createStore(reducer)\nexport default store\n","import React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Button, LinkExternal, Modal } from 'leek-uikit'\nimport { ArrowUpCircle } from 'react-feather'\nimport { getTranscationHash } from 'utils/chainExplorer'\nimport { AutoColumn } from './Column'\nimport { ConfirmedIcon } from './helpers'\nimport store from '../../store/store'\n\ntype TransactionSubmittedContentProps = {\n  onDismiss: () => void\n}\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nconst TransactionSubmittedContent = ({ onDismiss }: TransactionSubmittedContentProps) => {\n  const theme = useContext(ThemeContext)\n  const transaction = store.getState()\n\n  return (\n    <Modal title=\"Transaction submitted\" onDismiss={onDismiss}>\n      <ConfirmedIcon>\n        <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"8px\" justify=\"center\">\n        {transaction.hash && (\n          <LinkExternal href={getTranscationHash(chainId, transaction.hash)}>View on PolygonScan</LinkExternal>\n        )}\n        <Button onClick={onDismiss} mt=\"20px\">\n          Close\n        </Button>\n      </AutoColumn>\n    </Modal >\n  )\n}\n\nexport default TransactionSubmittedContent\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Modal } from 'leek-uikit'\nimport { ConfirmedIcon } from './helpers'\n\ntype ConfirmationPendingContentProps = { onDismiss: () => void }\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`\n\nconst CustomLightSpinner = styled(Spinner)<{ size: string }>`\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n`\n\nconst ConfirmationPendingContent = ({ onDismiss }: ConfirmationPendingContentProps) => {\n  return (\n    <Modal title=\"Waiting for confirmation\" onDismiss={onDismiss}>\n      <ConfirmedIcon>\n        <CustomLightSpinner src=\"./images/blue-loader.svg\" alt=\"loader\" size=\"90px\" />\n      </ConfirmedIcon>\n    </Modal>\n  )\n}\n\nexport default ConfirmationPendingContent\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n// import BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, useModal } from 'leek-uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport { getBalanceNumber, getMainTokenBalance } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport TransactionSubmittedContent from './TransactionSubmittedContent'\nimport ConfirmationPendingContent from './ConfirmationPendingContent'\nimport store from '../../store/store'\nimport { GET_TRANSACTION_HASH } from '../../store/reducer'\n\ninterface Props {\n  tokenName: string\n  onDismiss?: () => void\n  contract: any\n  mainToken: string\n  rate: number\n}\n\nconst ParticipateModal: React.FC<Props> = ({ tokenName, onDismiss = () => null, contract, mainToken, rate }) => {\n  const [value, setValue] = useState('')\n  const wallet = useWallet()\n  const balance = getBalanceNumber(new BigNumber(wallet.balance)).toFixed(4)\n  const { account } = useWallet()\n  const inputValue = getMainTokenBalance(new BigNumber(value))\n\n  const buyTokens = async () => {\n    onPresentPendingModal()\n    const result = await contract.methods.buyTokens(account).send({ from: account, value: inputValue })\n    if (result) {\n      const action = {\n        type: GET_TRANSACTION_HASH,\n        hash: result.transactionHash,\n      }\n      store.dispatch(action)\n      onPresentSubmittedModal()\n    }\n  }\n\n  const [onPresentPendingModal] = useModal(<ConfirmationPendingContent onDismiss={onDismiss} />)\n  const [onPresentSubmittedModal] = useModal(<TransactionSubmittedContent onDismiss={onDismiss} />)\n\n  const isValueInValid = Number(value) === 0\n\n  return (\n    <>\n      <Modal title=\"Participate LEEK IDO\" onDismiss={onDismiss}>\n        <BalanceInput\n          value={value}\n          onChange={(e) => setValue(e.currentTarget.value)}\n          symbol={mainToken}\n          max={balance}\n          onSelectMax={() => setValue(balance)}\n          rate={rate}\n          token={tokenName}\n        />\n        <Flex justifyContent=\"space-between\" mb=\"24px\">\n          <Button variant=\"primary\" mr=\"8px\" onClick={buyTokens} disabled={isValueInValid}>\n            Buy {tokenName}\n          </Button>\n\n          <Button variant=\"secondary\" mr=\"8px\" onClick={onDismiss}>\n            Cancel\n          </Button>\n        </Flex>\n      </Modal>\n    </>\n  )\n}\n\nexport default ParticipateModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from 'leek-uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <StyledProgress>\n      <Progress primaryStep={progress} />\n    </StyledProgress>\n  )\n}\n\nexport default IfoCardProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from 'leek-uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport numeral from 'numeral'\n\nexport interface IfoCardDetailsProps {\n  launchTime: string\n  closingTime: string\n  salesAmount: number\n  projectSiteUrl: string\n  rate: number\n  mainToken: string\n  tokenName: string\n  availableToken: number\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchTime,\n  closingTime,\n  salesAmount,\n  projectSiteUrl,\n  rate,\n  mainToken,\n  tokenName,\n  availableToken,\n}) => {\n  const TranslateString = useI18n()\n  const tokenNumber = getBalanceNumber(new BigNumber(availableToken))\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>Launch Time</Display>\n          <Text>\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/timezone/utc\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime} UTC\n            </Link>\n          </Text>\n        </Item>\n\n        <Item>\n          <Display>Closing Time</Display>\n          <Text>\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/timezone/utc\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {closingTime} UTC\n            </Link>\n          </Text>\n        </Item>\n\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>\n            {numeral(salesAmount).format('0,0')} {tokenName}\n          </Text>\n        </Item>\n\n        <Item>\n          <Display>Available Token</Display>\n          <Text>\n            {numeral(tokenNumber).format('0,0')} {tokenName}\n          </Text>\n        </Item>\n\n        <Item>\n          <Display>LEEK per MATIC</Display>\n          <Text>\n            1 {mainToken} = {rate} {tokenName}\n          </Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon, Button, useModal } from 'leek-uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport moment from 'moment'\nimport useI18n from 'hooks/useI18n'\nimport { useIfoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useRefresh from 'hooks/useRefresh'\nimport IfoCardHeader from './IfoCardHeader'\nimport ParticipateModal from './ParticipateModal'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardDetails from './IfoCardDetails'\n\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst StyledIfoCard = styled(Card) <{ ifoId: string }>`\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  width: 100%;\n`\n\nconst getStatus = (isOpen: boolean | null, hasClosed: boolean | null) => {\n  if (!isOpen && !hasClosed) {\n    return 'coming_soon'\n  }\n\n  if (isOpen && !hasClosed) {\n    return 'live'\n  }\n\n  if (!isOpen && hasClosed) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'finished') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'FINISHED')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const { id, idoAddress, name, mainToken, subTitle, startTime, endTime, salesAmount, projectSiteUrl } = ifo\n  const [state, setState] = useState({\n    isLoading: true,\n    status: null,\n    openingTime: 0,\n    closingTime: 0,\n    rate: 0,\n    availableToken: 0,\n  })\n\n  const { account } = useWallet()\n  const contract = useIfoContract(idoAddress[CHAIN_ID])\n  const { fastRefresh } = useRefresh()\n\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [openingTime, closingTime, isOpen, hasClosed, rate, availableToken] = await Promise.all([\n        contract.methods._openingTime().call(),\n        contract.methods._closingTime().call(),\n        contract.methods.isOpen().call(),\n        contract.methods.hasClosed().call(),\n        contract.methods._rate().call(),\n        contract.methods.remainingTokens().call(),\n      ])\n\n      const status = getStatus(isOpen, hasClosed)\n\n      setState({\n        isLoading: false,\n        status,\n        openingTime,\n        closingTime,\n        rate,\n        availableToken,\n      })\n    }\n\n    fetchProgress()\n  }, [contract, fastRefresh, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished'\n\n  const launchTime =\n    moment.utc(Number(state.openingTime) * 1000).format('MMMM Do YYYY, HH:mm') ||\n    moment.utc(startTime * 1000).format('MMMM Do YYYY, HH:mm')\n\n  const closingTime =\n    moment.utc(Number(state.closingTime) * 1000).format('MMMM Do YYYY, HH:mm') ||\n    moment.utc(endTime * 1000).format('MMMM Do YYYY, HH:mm')\n\n  const remainingTokens = getBalanceNumber(new BigNumber(state.availableToken))\n\n  const progress = isActive || isFinished ? ((salesAmount - remainingTokens) / salesAmount) * 100 : 0\n\n  const [onPresentParticipateModal] = useModal(\n    <ParticipateModal tokenName={name} contract={contract} mainToken={mainToken} rate={state.rate} />,\n  )\n\n  return (\n    <>\n      <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n        <CardBody>\n          <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n          <IfoCardProgress progress={progress} />\n          {!account ? (\n            <UnlockButton fullWidth />\n          ) : (\n            <Button fullWidth onClick={onPresentParticipateModal} disabled={!isActive}>\n              Participate\n            </Button>\n          )}\n          <Divider />\n          <IfoCardDetails\n            launchTime={launchTime}\n            closingTime={closingTime}\n            projectSiteUrl={projectSiteUrl}\n            salesAmount={salesAmount}\n            rate={state.rate}\n            mainToken={mainToken}\n            tokenName={name}\n            availableToken={state.availableToken}\n          />\n        </CardBody>\n      </StyledIfoCard>\n    </>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from 'leek-uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from 'leek-uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport Footer from 'components/Footer'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        {activeIfo !== undefined ? <IfoCard ifo={activeIfo} /> :\n          <Flex alignItems=\"center\" justifyContent=\"center\">\n            <Text mb=\"16px\" bold fontSize=\"30px\">No IDOs Right Now</Text>\n          </Flex>\n        }\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>Buy MATIC</li>\n            <li>Wait for the Sale to start</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://quickswap.exchange/#/swap\" mr=\"16px\">\n              Buy MATIC\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>While the sale is live, commit your MATIC tokens to buy the tokens</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>Claim the tokens you bought, along with any unspent funds.</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n        </div>\n        <div>\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IDO?')}</Title>\n            <Text mb={3}>\n              Launch your project with LEEK, Polygon Network’s most transparent and active DeFi Platform\n            </Text>\n            <Button as=\"a\" href=\"https://forms.gle/bry8f1ZJa5u4VRGZ6\" external>\n              Contact Us\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}